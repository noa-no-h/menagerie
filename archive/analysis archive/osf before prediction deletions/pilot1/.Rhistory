prior = default_priors,
family = 'bernoulli')
summary(analysis.decoy)
hdi(analysis.decoy)
#** introspection ratings ----
df.decoy.intro <- df.decoy %>%
filter(!is.na(introspect_rating))
## in experience condition
df.decoy.intro.experience = df.decoy %>%
filter(factor == 'experience') %>%
mutate(effect_size = choice.target,
effect_size_std = scale(effect_size), effect_size_range = range01(effect_size),
showed_effect = factor(choice.target, c(T,F), c('Effect', 'No effect')))
# dichotomized
summary.decoy.intro.experience <- df.decoy.intro.experience %>%
group_by(showed_effect) %>%
summarize(
mean_introspect_rating = mean(as.numeric(introspect_rating), na.rm = TRUE),
se_introspect_rating = se(introspect_rating)
)
ggplot(summary.decoy.intro.experience, aes(x = showed_effect, y = mean_introspect_rating, fill = showed_effect)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(x = "Showed effect", y = "introspection rating") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+
scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
analysis.decoy.intro.experience.dichotomized = brm(introspect_rating ~ showed_effect,
df.decoy.intro.experience %>% mutate(introspect_rating = scale(introspect_rating)),
prior = default_priors,
save_pars = save_pars(group = F))
summarise_draws(analysis.decoy.intro.experience.dichotomized)
check_divergences(analysis.decoy.intro.experience.dichotomized$fit)
summary(analysis.decoy.intro.experience.dichotomized)
hdi(analysis.decoy.intro.experience.dichotomized)
## across conditions
summary.decoy.intro.both <- df.decoy.intro %>% group_by(factor) %>%
summarize(introspect.m = mean(introspect_rating), introspect.se = se(introspect_rating))
ggplot(summary.decoy.intro.both, aes(x = factor, y = introspect.m)) +
geom_col(fill = "lightblue") +
geom_errorbar(aes(ymin = introspect.m - introspect.se, ymax = introspect.m + introspect.se), width = .2) +
labs(x = "Test Version") +
theme_custom()
analysis.decoy.intro.both = brm(introspect_rating ~ factor,
data = df.decoy,
prior = default_priors,
save_pars = save_pars(group = F))
summarise_draws(analysis.decoy.intro.both)
check_divergences(analysis.decoy.intro.both$fit)
summary(analysis.decoy.intro.both)
hdi(analysis.decoy.intro.both)
#* 8 Belief (within-subjects) ------------------------------------------------------------------
#** data preparation ----
df.belief <- df %>%
filter(task_name == 'belief') %>%
mutate(choice.yes = choice == 'Yes')
df.belief.choices = df.belief %>%
filter(factor == "experience", !is.na(choice), !is.na(condition))
#** data visualization ----
summary.belief <- df.belief.choices %>%
group_by(condition) %>%
summarize(choice.yes.m = mean(choice.yes),
choice.yes.se = se.prop(choice.yes))
ggplot(summary.belief, aes(x = condition, y = choice.yes.m)) +
geom_col() +
geom_errorbar(aes(ymin = choice.yes.m - choice.yes.se,
ymax = choice.yes.m + choice.yes.se),
width = 0.2) +
theme_custom()
#** inferential statistics ----
analysis.belief = brm(choice.yes ~ condition + (condition | subject),
df.belief.choices,
prior = default_priors,
family = 'bernoulli')
summarise_draws(analysis.belief)
check_divergences(analysis.belief$fit)
summary(analysis.belief)
hdi(analysis.belief)
#** introspection ratings ----
df.belief.intro = df.belief %>%
filter(!is.na(introspect_rating))
## in experience condition
df.belief.intro.experience = df.belief.intro %>%
filter(factor == 'experience')
belief.effectsizes <- df.belief.choices %>%
filter(factor == 'experience') %>%
group_by(subject, condition) %>%
summarize(mean_choice = mean(choice.yes), .groups = 'drop') %>%
pivot_wider(names_from = condition, values_from = mean_choice) %>%
mutate(effect_size = Believable - Unbelievable) %>%
select(-Believable, -Unbelievable)
df.belief.intro.experience = df.belief.intro.experience %>%
left_join(belief.effectsizes, by = 'subject') %>%
mutate(showed_effect = factor(effect_size > 0, c(T,F), c('Effect', 'No effect')),
effect_size_std = scale(effect_size), effect_size_range = range01(effect_size))
# dichotomized
summary.belief.intro.experience = df.belief.intro.experience %>%
group_by(showed_effect) %>%
summarize(mean_introspect_rating = mean(introspect_rating, na.rm = T),
se_introspect_rating = se(introspect_rating),
)
ggplot(summary.belief.intro.experience,
aes(x = showed_effect, y = mean_introspect_rating)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(x = "Showed effect?", y = "Introspection rating") +
theme_custom()
analysis.belief.intro.experience.dichotomized = brm(introspect_rating ~ showed_effect,
df.belief.intro.experience %>% mutate(introspect_rating = scale(introspect_rating)),
prior = default_priors,
save_pars = save_pars(group = F))
summarise_draws(analysis.belief.intro.experience.dichotomized)
check_divergences(analysis.belief.intro.experience.dichotomized$fit)
summary(analysis.belief.intro.experience.dichotomized)
hdi(analysis.belief.intro.experience.dichotomized)
# continuous
ggplot(df.belief.intro.experience, aes(x = effect_size, y = introspect_rating)) +
geom_point() +
geom_smooth(method='lm') +
theme_custom()+
labs(x = "Effect size", y = "Introspection rating")
analysis.belief.intro.experience.continuous = brm(introspect_rating ~ effect_size,
df.belief.intro.experience %>% mutate(introspect_rating = scale(introspect_rating),
effect_size = scale(effect_size)),
prior = default_priors,
save_pars = save_pars(group = F))
summarise_draws(analysis.belief.intro.experience.continuous)
check_divergences(analysis.belief.intro.experience.continuous$fit)
summary(analysis.belief.intro.experience.continuous)
hdi(analysis.belief.intro.experience.continuous)
## across conditions
summary.belief.intro.both = df.belief.intro %>%
group_by(factor) %>%
summarize(introspect.m = mean(introspect_rating), introspect.se = se(introspect_rating))
ggplot(summary.belief.intro.both, aes(x = factor, y = introspect.m)) +
geom_col(fill = "lightblue") +
geom_errorbar(aes(ymin = introspect.m - introspect.se, ymax = introspect.m + introspect.se), width = .2) +
theme_custom()
analysis.belief.intro.both = brm(introspect_rating ~ factor,
df.belief.intro %>% mutate(introspect_rating = scale(introspect_rating)),
prior = default_priors,
save_pars = save_pars(group = F))
summarise_draws(analysis.belief.intro.both)
check_divergences(analysis.belief.intro.both$fit)
summary(analysis.belief.intro.both)
hdi(analysis.belief.intro.both)
#* 9 Mere exposure (within-subjects) ------------------------------------------------------
#** data preparation ----
df.mee = df %>%
filter(task_name == 'mere exposure') %>%
mutate(choice = as.numeric(choice))
df.mee.choices <- df.mee %>%
filter(factor == "experience", !is.na(choice)) %>%
mutate(condition = factor(condition, c(1,25), c('low', 'high')))
#** data visualization (general) ----
summary.mee = df.mee.choices %>%
group_by(condition) %>%
summarize(choice.m = mean(choice), choice.se = se(choice))
ggplot(summary.mee, aes(x = condition, y = choice.m)) +
geom_col(fill = "lightblue") +
geom_errorbar(aes(ymin = choice.m - choice.se, ymax = choice.m + choice.se), width = .2) +
theme_custom() +
labs(x = "Condition", y = "Mean Liking Rating")
#** inferential statistics ----
analysis.mee = brm(choice ~ condition + (condition | subject),
df.mee.choices %>% mutate(choice = scale(choice)),
prior = default_priors,
save_pars = save_pars(group = F))
summarise_draws(analysis.mee)
check_divergences(analysis.mee$fit)
summary(analysis.mee)
hdi(analysis.mee)
#** introspection ratings ---------------------------------------------------
df.mee.intro <- df.mee %>% filter(!is.na(introspect_rating))
## in experience condition
df.mee.intro.experience = df.mee.intro %>%
filter(factor == 'experience')
mee.effectsizes <- df.mee.choices %>%
filter(factor == 'experience') %>%
group_by(subject, condition) %>%
summarize(mean_choice = mean(choice), .groups = 'drop') %>%
pivot_wider(names_from = condition, values_from = mean_choice) %>%
mutate(effect_size = high - low) %>%
select(-high, -low)
df.mee.intro.experience = df.mee.intro.experience %>%
left_join(mee.effectsizes, by = 'subject') %>%
mutate(showed_effect = factor(effect_size > 0, c(T,F), c('Effect', 'No effect')),
effect_size_std = scale(effect_size), effect_size_range = range01(effect_size))
# dichotomized
summary.mee.intro.experience = df.mee.intro.experience %>%
group_by(showed_effect) %>%
summarize(mean_introspect_rating = mean(introspect_rating, na.rm = T),
se_introspect_rating = se(introspect_rating),
)
ggplot(summary.mee.intro.experience,
aes(x = showed_effect, y = mean_introspect_rating)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(x = "Showed effect?", y = "Introspection rating") +
theme_custom()
analysis.mee.intro.experience.dichotomized = brm(introspect_rating ~ showed_effect,
df.mee.intro.experience %>% mutate(introspect_rating = scale(introspect_rating)),
prior = default_priors,
save_pars = save_pars(group = F))
summarise_draws(analysis.mee.intro.experience.dichotomized)
check_divergences(analysis.mee.intro.experience.dichotomized$fit)
summary(analysis.mee.intro.experience.dichotomized)
hdi(analysis.mee.intro.experience.dichotomized)
# continuous
ggplot(df.mee.intro.experience, aes(x = effect_size, y = introspect_rating)) +
geom_point() +
geom_smooth(method='lm') +
theme_custom()+
labs(x = "Effect size", y = "Introspection rating")
analysis.mee.intro.experience.continuous = brm(introspect_rating ~ effect_size,
df.mee.intro.experience %>% mutate(introspect_rating = scale(introspect_rating),
effect_size = scale(effect_size)),
prior = default_priors,
save_pars = save_pars(group = F))
summarise_draws(analysis.mee.intro.experience.continuous)
check_divergences(analysis.mee.intro.experience.continuous$fit)
summary(analysis.mee.intro.experience.continuous)
hdi(analysis.mee.intro.experience.continuous)
## across conditions
summary.mee.intro.both <- df.mee.intro %>%
group_by(factor) %>%
summarize(introspect.m = mean(introspect_rating), introspect.se = se(introspect_rating))
ggplot(summary.mee.intro.both, aes(x = factor, y = introspect.m)) +
geom_col(fill = "lightblue") +
geom_errorbar(aes(ymin = introspect.m - introspect.se, ymax = introspect.m + introspect.se), width = .2) +
theme_custom()
analysis.mee.intro.both = brm(introspect_rating ~ factor,
df.mee.intro %>% mutate(introspect_rating = scale(introspect_rating)),
prior = default_priors,
save_pars = save_pars(group = F))
summarise_draws(analysis.mee.intro.both)
check_divergences(analysis.mee.intro.both$fit)
summary(analysis.mee.intro.both)
hdi(analysis.mee.intro.both)
summarise_draws(analysis.anchor)
check_divergences(analysis.anchor$fit)
hdi(analysis.anchor)
summarise_draws(analysis.anchor.intro.experience.dichotomized)
check_divergences(analysis.anchor.intro.experience.dichotomized$fit)
summary(analysis.anchor.intro.experience.dichotomized)
hdi(analysis.anchor.intro.experience.dichotomized)
summarise_draws(analysis.anchor.intro.experience.continuous)
check_divergences(analysis.anchor.intro.experience.continuous$fit)
summary(analysis.anchor.intro.experience.continuous)
hdi(analysis.anchor.intro.experience.continuous)
summarise_draws(analysis.anchor.intro.both)
check_divergences(analysis.anchor.intro.both$fit)
summary(analysis.anchor.intro.both)
hdi(analysis.anchor.intro.both)
summarise_draws(analysis.avail)
check_divergences(analysis.avail$fit)
hdi(analysis.avail)
summarise_draws(analysis.avail.intro.experience)
check_divergences(analysis.avail.intro.experience$fit)
summary(analysis.avail.intro.experience)
hdi(analysis.avail.intro.experience)
summarise_draws(analysis.avail.intro.both)
check_divergences(analysis.avail.intro.both$fit)
summary(analysis.avail.intro.both)
hdi(analysis.avail.intro.both)
summarise_draws(analysis.cause)
check_divergences(analysis.cause$fit)
hdi(analysis.cause)
summarise_draws(analysis.cause.intro.experience.dichotomized)
check_divergences(analysis.cause.intro.experience.dichotomized$fit)
hdi(analysis.cause.intro.experience.dichotomized)
summary(analysis.cause.intro.experience.continuous)
hdi(analysis.cause.intro.experience.continuous)
summarise_draws(analysis.cause.intro.both)
check_divergences(analysis.cause.intro.both$fit)
summary(analysis.cause.intro.both)
hdi(analysis.cause.intro.both)
summarise_draws(analysis.decoy)
check_divergences(analysis.decoy$fit)
summary(analysis.decoy)
hdi(analysis.decoy)
summarise_draws(analysis.decoy.intro.experience.dichotomized)
check_divergences(analysis.decoy.intro.experience.dichotomized$fit)
hdi(analysis.decoy.intro.experience.dichotomized)
summary(analysis.decoy.intro.both)
hdi(analysis.decoy.intro.both)
summarise_draws(analysis.decoy.intro.both)
check_divergences(analysis.decoy.intro.both$fit)
summarise_draws(analysis.belief)
#** inferential statistics ----
analysis.belief = brm(choice.yes ~ condition + (condition || subject),
df.belief.choices,
prior = default_priors,
family = 'bernoulli')
summarise_draws(analysis.belief)
#** inferential statistics ----
analysis.belief = brm(choice.yes ~ condition + (1 | subject),
df.belief.choices,
prior = default_priors,
family = 'bernoulli')
pkg.names = c('ggplot2', 'tidyverse', 'RColorBrewer', 'extrafont',
'this.path', 'brms', 'bayestestR', 'posterior', 'rstan')
p_load(char = pkg.names)
summarise_draws(analysis.belief)
require(posterior)
posterior::summarise_draws(analysis.belief)
check_divergences(analysis.belief$fit)
hdi(analysis.belief)
summarise_draws(analysis.belief.intro.experience.dichotomized)
check_divergences(analysis.belief.intro.experience.dichotomized$fit)
hdi(analysis.belief.intro.experience.dichotomized)
summarise_draws(analysis.belief.intro.experience.continuous)
check_divergences(analysis.belief.intro.experience.continuous$fit)
hdi(analysis.belief.intro.experience.continuous)
summarise_draws(analysis.belief.intro.both)
check_divergences(analysis.belief.intro.both$fit)
hdi(analysis.belief.intro.both)
summarise_draws(analysis.mee)
check_divergences(analysis.mee$fit)
analysis.mee = brm(choice ~ condition + (condition || subject),
df.mee.choices %>% mutate(choice = scale(choice)),
prior = default_priors,
save_pars = save_pars(group = F))
analysis.mee = brm(choice ~ condition + (condition | subject),
df.mee.choices %>% mutate(choice = scale(choice)),
prior = default_priors,
save_pars = save_pars(group = F),
cores = 4,
control = list(adapt_delta = 0.95))
summarise_draws(analysis.mee)
check_divergences(analysis.mee$fit)
hdi(analysis.mee)
summarise_draws(analysis.mee.intro.experience.dichotomized)
check_divergences(analysis.mee.intro.experience.dichotomized$fit)
hdi(analysis.mee.intro.experience.dichotomized)
summarise_draws(analysis.mee.intro.experience.continuous)
check_divergences(analysis.mee.intro.experience.continuous$fit)
hdi(analysis.mee.intro.experience.continuous)
summarise_draws(analysis.mee.intro.both)
check_divergences(analysis.mee.intro.both$fit)
hdi(analysis.mee.intro.both)
## in experience condition
all_list_introspection_experience = list(df.anchor.intro.experience,
df.avail.intro.experience,
df.cause.intro.experience,
df.decoy.intro.experience,
df.belief.intro.experience,
df.mee.intro.experience)
all_data_introspection_experience = all_list_introspection_experience[[1]] %>%
select(subject, task_name, introspect_rating, effect_size, effect_size_range, showed_effect)
for (i in 2:length(all_list_introspection_experience)) {
all_data_introspection_experience = all_data_introspection_experience %>%
rbind(all_list_introspection_experience[[i]] %>%
select(subject, task_name, introspect_rating, effect_size, effect_size_range, showed_effect))
}
# dichotomous
all_summary_introspection_experience = all_data_introspection_experience %>%
filter(!is.na(showed_effect)) %>%
group_by(showed_effect) %>%
summarize(mean_introspect_rating = mean(introspect_rating),
se_introspect_rating = se(introspect_rating))
ggplot(all_summary_introspection_experience,
aes(x = showed_effect, y = mean_introspect_rating, fill = showed_effect)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "", x = "Influenced by heuristic?", y = "Influence rating") +
theme_custom() +
scale_fill_manual(values = effect_no) +
scale_x_discrete(labels = c('Yes', 'No')) +
guides(fill = "none")
all_data_introspection_experience$showed_effect
all_analysis_introspection_experience_dichotomous = brm(introspect_rating ~ showed_effect + (showed_effect | subject) + (1 | task_name),
all_data_introspection_experience %>% mutate(introspect_rating = scale(introspect_rating),
showed_effect = relevel(showed_effect, ref = 'No effect')),
prior = default_priors,
save_pars = save_pars(group = F),
cores = 4,
control = list(adapt_delta = 0.95))
summarise_draws(all_analysis_introspection_experience_dichotomous)
all_analysis_introspection_experience_dichotomous = brm(introspect_rating ~ showed_effect + (showed_effect || subject) + (1 | task_name),
all_data_introspection_experience %>% mutate(introspect_rating = scale(introspect_rating),
showed_effect = relevel(showed_effect, ref = 'No effect')),
prior = default_priors,
save_pars = save_pars(group = F),
cores = 4,
control = list(adapt_delta = 0.95))
summarise_draws(all_analysis_introspection_experience_dichotomous)
check_divergences(all_analysis_introspection_experience_dichotomous$fit)
all_analysis_introspection_experience_dichotomous = brm(introspect_rating ~ showed_effect + (1 | subject) + (1 | task_name),
all_data_introspection_experience %>% mutate(introspect_rating = scale(introspect_rating),
showed_effect = relevel(showed_effect, ref = 'No effect')),
prior = default_priors,
save_pars = save_pars(group = F),
cores = 4,
control = list(adapt_delta = 0.95))
summarise_draws(all_analysis_introspection_experience_dichotomous)
summary(all_analysis_introspection_experience_dichotomous)
hdi(all_analysis_introspection_experience_dichotomous)
## across conditions
all_list_introspection_both = list(df.anchor.intro,
df.avail.intro,
df.cause.intro,
df.decoy.intro,
df.belief.intro,
df.mee.intro)
all_data_introspection_both = all_list_introspection_both[[1]] %>%
left_join(all_list_introspection_experience[[1]] %>% select(subject, factor, showed_effect), by = c('subject', 'factor')) %>%
select(subject, task_name, factor, introspect_rating, showed_effect)
for (i in 2:length(all_list_introspection_both)) {
all_data_introspection_both = all_data_introspection_both %>%
rbind(all_list_introspection_both[[i]] %>%
left_join(all_list_introspection_experience[[i]] %>% select(subject, factor, showed_effect), by = c('subject', 'factor')) %>%
select(subject, task_name, factor, introspect_rating, showed_effect))
}
all_data_introspection_both = all_data_introspection_both %>%
mutate(showed_effect = as.character(showed_effect),
showed_effect = ifelse(factor == 'prediction', 'Prediction', showed_effect),
showed_effect = factor(showed_effect, c('Effect', 'No effect', 'Prediction')),
introspect_rating = introspect_rating - 10)
all_summary_introspection_both = all_data_introspection_both %>%
group_by(factor) %>%
summarize(mean_introspect_rating = mean(introspect_rating),
se_introspect_rating = se(introspect_rating))
ggplot(all_summary_introspection_both, aes(x = factor, y = mean_introspect_rating, fill = factor)) +
geom_point(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "", x = "Condition", y = "Influence rating") +
theme_custom() +
scale_fill_manual(values = in_and_ex)+
guides(fill = "none")+
scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
all_analysis_introspection_both = brm(introspect_rating ~ factor + (factor | subject) + (1 | task_name),
all_data_introspection_both %>%
mutate(introspect_rating = scale(introspect_rating),
factor = relevel(factor, ref = 'prediction')),
prior = default_priors,
save_pars = save_pars(group = F))
all_analysis_introspection_both = brm(introspect_rating ~ factor + (factor | subject) + (1 | task_name),
all_data_introspection_both %>%
mutate(introspect_rating = scale(introspect_rating),
factor = relevel(factor, ref = 'prediction')),
prior = default_priors,
save_pars = save_pars(group = F),
cores = 4,
control = list(adapt_delta = 0.95))
summarise_draws(all_analysis_introspection_both)
all_analysis_introspection_both = brm(introspect_rating ~ factor + (1 | subject) + (1 | task_name),
all_data_introspection_both %>%
mutate(introspect_rating = scale(introspect_rating),
factor = relevel(factor, ref = 'prediction')),
prior = default_priors,
save_pars = save_pars(group = F),
cores = 4,
control = list(adapt_delta = 0.95))
summarise_draws(all_analysis_introspection_both)
all_analysis_introspection_both = brm(introspect_rating ~ factor + (1 | subject),
all_data_introspection_both %>%
mutate(introspect_rating = scale(introspect_rating),
factor = relevel(factor, ref = 'prediction')),
prior = default_priors,
save_pars = save_pars(group = F),
cores = 4,
control = list(adapt_delta = 0.95))
summarise_draws(all_analysis_introspection_both)
check_divergences(all_analysis_introspection_both$fit)
summary(all_analysis_introspection_both)
hdi(all_analysis_introspection_both)
all_analysis_introspection_both = brm(introspect_rating ~ factor + (1 | subject) + (1 | task_name),
all_data_introspection_both %>%
mutate(introspect_rating = scale(introspect_rating),
factor = relevel(factor, ref = 'prediction')),
prior = default_priors,
save_pars = save_pars(group = F),
cores = 4,
control = list(adapt_delta = 0.95))
summarise_draws(all_analysis_introspection_both)
hdi(all_analysis_introspection_both)
check_divergences(all_analysis_introspection_both$fit)
summarise_draws(all_analysis_introspection_both)
summarise_draws(all_analysis_introspection_experience_dichotomous)
all_analysis_introspection_experience_continuous_range = brm(introspect_rating ~ effect_size_range + (effect_size_range | subject) + (1 | task_name),
all_data_introspection_experience %>% mutate(introspect_rating = scale(introspect_rating),
effect_size_range = scale(effect_size_range)),
prior = default_priors,
save_pars = save_pars(group = F),
cores = 4,
control = list(adapt_delta = 0.95))
all_analysis_introspection_experience_continuous = brm(introspect_rating ~ effect_size_range + (effect_size_range | subject) + (1 | task_name),
all_data_introspection_experience %>% mutate(introspect_rating = scale(introspect_rating),
effect_size_range = scale(effect_size_range)),
prior = default_priors,
save_pars = save_pars(group = F),
cores = 4,
control = list(adapt_delta = 0.95))
summarise_draws(all_analysis_introspection_experience_continuous)
check_divergences(all_analysis_introspection_experience_dichotomous$fit)
hdi(all_analysis_introspection_experience_continuous, effects = 'all')
summarise_draws(all_analysis_introspection_experience_continuous)
all_analysis_introspection_experience_continuous_within = brm(introspect_rating_within ~ effect_size_range_within + (effect_size_range_within | subject) + (1 | task_name),
all_data_introspection_experience,
prior = default_priors,
save_pars = save_pars(group = F))
all_analysis_introspection_experience_continuous_within = brm(introspect_rating_within ~ effect_size_range_within + (effect_size_range_within | subject) + (1 | task_name),
all_data_introspection_experience,
prior = default_priors,
save_pars = save_pars(group = F),
cores = 4,
control = list(adapt_delta = 0.95))
# save all analyses
save.image("pilot1_output.rdata")
rm(list=ls())
