filter(task_name == "status_quo") %>%
filter(is.na(stimulus)) %>%
mutate(choice_binary = as.numeric(choice == "70/30"))%>%
mutate(condition = factor(condition, levels = c("Factor-Included", "Factor-Excluded")))
summary_status_quo_data <- status_quo_data %>%
group_by(condition) %>%
summarize(
mean_choice = mean(choice_binary),
se_choice = se.prop(choice_binary),
count = n()
)
ggplot(summary_status_quo_data, aes(x = condition, y = mean_choice, fill = condition)) +
geom_bar(stat = "identity") +
labs(title = "Choices to continue the status quo", x = "Condition", y = "Percent subjects who recommended the status quo") +
geom_text(aes(label = paste0("n=", count)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
theme_custom() +
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+   scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
status_quo_choices_ex <- status_quo_data %>%
filter(factor == "Factor-Excluded") %>%
pull(choice_binary)
status_quo_choices_in <- status_quo_data %>%
filter(factor == "Factor-Included") %>%
pull(choice_binary)
#analysis -- is there a better way to do this?
prop_ex <- sum(status_quo_choices_ex) / length(status_quo_choices_ex)
prop_in <- sum(status_quo_choices_in) / length(status_quo_choices_in)
successes <- c(sum(status_quo_choices_ex), sum(status_quo_choices_in))
trials <- c(length(status_quo_choices_ex), length(status_quo_choices_in))
test_result <- prop.test(successes, trials, alternative = "less")
print(test_result)
summary(glm(choice_binary ~ condition, data = status_quo_data, family = 'binomial'))
status_quo_data <- december_pilot %>%
filter(task_name == "status_quo") %>%
filter(is.na(stimulus)) %>%
mutate(choice_binary = as.numeric(choice == "70/30"))%>%
mutate(condition = factor(condition, levels = c("Factor-Included", "Factor-Excluded")))
View(status_quo_data)
status_quo_data <- december_pilot %>%
filter(task_name == "status_quo") %>%
filter(is.na(stimulus)) %>%
mutate(choice_binary = as.numeric(choice == "status quo"))%>%
mutate(condition = factor(condition, levels = c("Factor-Included", "Factor-Excluded")))
summary_status_quo_data <- status_quo_data %>%
group_by(condition) %>%
summarize(
mean_choice = mean(choice_binary),
se_choice = se.prop(choice_binary),
count = n()
)
ggplot(summary_status_quo_data, aes(x = condition, y = mean_choice, fill = condition)) +
geom_bar(stat = "identity") +
labs(title = "Choices to continue the status quo", x = "Condition", y = "Percent subjects who recommended the status quo") +
geom_text(aes(label = paste0("n=", count)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
theme_custom() +
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+   scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
status_quo_data <- december_pilot %>%
filter(task_name == "status_quo") %>%
filter(is.na(stimulus)) %>%
mutate(choice_binary = as.numeric(choice == "status quo"))%>%
mutate(condition = factor(condition, levels = c("Factor-Included", "Factor-Excluded")))
summary_status_quo_data <- status_quo_data %>%
group_by(condition) %>%
summarize(
mean_choice = mean(choice_binary),
se_choice = se.prop(choice_binary),
count = n()
)
ggplot(summary_status_quo_data, aes(x = condition, y = mean_choice, fill = condition)) +
geom_bar(stat = "identity") +
labs(title = "Choices to continue the status quo", x = "Condition", y = "Percent subjects who recommended the status quo") +
geom_text(aes(label = paste0("n=", count)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
theme_custom() +
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+   scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
status_quo_choices_ex <- status_quo_data %>%
filter(factor == "Factor-Excluded") %>%
pull(choice_binary)
status_quo_choices_in <- status_quo_data %>%
filter(factor == "Factor-Included") %>%
pull(choice_binary)
#analysis -- is there a better way to do this?
prop_ex <- sum(status_quo_choices_ex) / length(status_quo_choices_ex)
prop_in <- sum(status_quo_choices_in) / length(status_quo_choices_in)
successes <- c(sum(status_quo_choices_ex), sum(status_quo_choices_in))
trials <- c(length(status_quo_choices_ex), length(status_quo_choices_in))
test_result <- prop.test(successes, trials, alternative = "less")
print(test_result)
summary(glm(choice_binary ~ condition, data = status_quo_data, family = 'binomial'))
summary(glm(choice_binary ~ condition, data = status_quo_data, family = 'binomial'))
test_result <- prop.test(successes, trials, alternative = "less")
print(test_result)
summary(glm(choice_binary ~ condition, data = status_quo_data, family = 'binomial'))
sunk_cost_data <- december_pilot %>%
filter(task_name == "sunk_cost effect")
View(sunk_cost_data)
sunk_cost_data <- december_pilot %>%
filter(task_name == "sunk_cost2 effect")
View(sunk_cost_data)
sunk_cost_data <- december_pilot %>%
filter(task_name == "sunk_cost2 effect") %>%
mutate(switched = choice == "Don't Continue Investing",
switched.num = as.numeric(switched))
percentage_sunk_cost_data <- sunk_cost_data %>%
group_by(condition) %>%
mutate(condition = factor(condition, levels = c("Sunk Cost", "No Sunk Cost"))) %>%
summarize(
total_in_condition = n(),  # Total number of subjects in each condition
solar_powered_count = sum(choice == "Solar-powered Pump")  # Count who chose "Solar-powered pump"
) %>%
mutate(percentage_solar_powered = (solar_powered_count / total_in_condition) * 100)
summary(glm(switched ~ condition, data = sunk_cost_data, family = 'binomial'))
ggplot(percentage_sunk_cost_data, aes(x = condition, y = percentage_solar_powered, fill = condition)) +
geom_bar(stat = "identity") +
labs(title = "Percentage Switching Projects by Condition", x = "Condition", y = "Percentage of Choices to Switch") +
geom_text(aes(label = paste0("n=", total_in_condition)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+   scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
solar_powered_counts <- percentage_sunk_cost_data$solar_powered_count
total_counts <- percentage_sunk_cost_data$total_in_condition
prop_test_result <- prop.test(solar_powered_counts, total_counts)
print(prop_test_result)
summary(glm(switched ~ condition, data = sunk_cost_data, family = 'binomial'))
test = brm(switched.num ~ condition, data = sunk_cost_data, family = 'binomial')
sunk_cost_data <- december_pilot %>%
filter(task_name == "sunk_cost2 effect") %>%
mutate(switched = choice == "Don't Continue Investing",
switched.num = as.numeric(switched))
sunk_cost_data <- december_pilot %>%
filter(task_name == "sunk_cost2 effect") %>%
mutate(switched = choice == "Don't Continue Investing",
switched.num = as.numeric(switched))
percentage_sunk_cost_data <- sunk_cost_data %>%
group_by(condition) %>%
mutate(condition = factor(condition, levels = c("Sunk Cost", "No Sunk Cost"))) %>%
summarize(
total_in_condition = n(),  # Total number of subjects in each condition
switched_count = sum(choice == "Don't Continue Investing")  # Count who chose "Solar-powered pump"
) %>%
mutate(percentage_switched = (switched_count / total_in_condition) * 100)
summary(glm(switched ~ condition, data = sunk_cost_data, family = 'binomial'))
ggplot(percentage_sunk_cost_data, aes(x = condition, y = percentage_switched, fill = condition)) +
geom_bar(stat = "identity") +
labs(title = "Percentage Who Stopped Investing by Condition", x = "Condition", y = "Percentage of Choices to Stop Investing") +
geom_text(aes(label = paste0("n=", total_in_condition)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+   scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
summary(glm(switched ~ condition, data = sunk_cost_data, family = 'binomial'))
test = brm(switched.num ~ condition, data = sunk_cost_data, family = 'binomial')
summary(glm(switched ~ condition, data = sunk_cost_data, family = 'binomial'))
ggplot(percentage_sunk_cost_data, aes(x = condition, y = percentage_switched, fill = condition)) +
geom_bar(stat = "identity") +
labs(title = "Percentage Who Stopped Investing", x = "Condition", y = "Percentage of Choices to Stop Investing") +
geom_text(aes(label = paste0("n=", total_in_condition)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+   scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
solar_powered_counts <- percentage_sunk_cost_data$solar_powered_count
total_counts <- percentage_sunk_cost_data$total_in_condition
prop_test_result <- prop.test(solar_powered_counts, total_counts)
ggplot(summary_affect_data, aes(x = condition, y = mean_choice, fill = condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_choice - se_choice, ymax = mean_choice + se_choice), width = 0.2) +
labs(title = "Affect", x = "Condition", y = "How beneficial is natural gas") +
geom_text(aes(label = paste0("n=", count)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+   scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
illusory_truth_data <- december_pilot %>%
filter(task_name == "illusion of truth pt2") %>%
filter(stimulus != "")
View(illusory_truth_data)
illusory_truth_data <- december_pilot %>%
filter(task_name == "illusion of truth pt2") %>%
filter(stimulus != "")%>%
mutate(auxiliary_info1 = ifelse(choice > 50 & (condition == "false_new" | condition == "false_old"),
"false positive",
auxiliary_info1))
false_positive_counts <- illusory_truth_data %>%
filter(auxiliary_info1 == "false positive") %>%
group_by(subject, factor) %>%
summarize(false_positive_count = n()) %>%
ungroup()
# Step 2: Calculate the average and standard error of false positives per subject for each factor
average_false_positives <- false_positive_counts %>%
group_by(factor) %>%
summarize(
avg_false_positive = mean(false_positive_count),
se_false_positive = se(false_positive_count),
count = n()
)
ggplot(average_false_positives, aes(x = factor, y = avg_false_positive, fill = factor)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = avg_false_positive - se_false_positive, ymax = avg_false_positive + se_false_positive), width = 0.2) +
geom_text(aes(label = paste0("n=", count)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
labs(title = "Illusory Truth", x = "Condition", y = "Average False Positive Count") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+   scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
illusory_truth_data <- december_pilot %>%
filter(task_name == "illusion of truth pt2") %>%
filter(stimulus != "")%>%
mutate(auxiliary_info1 = ifelse(choice > 50 & (condition == "false_new" | condition == "false_old"),
"false positive",
"not false positive"))
false_positive_counts <- illusory_truth_data %>%
filter(auxiliary_info1 == "false positive") %>%
group_by(subject, factor) %>%
summarize(false_positive_count = n()) %>%
ungroup()
# Step 2: Calculate the average and standard error of false positives per subject for each factor
average_false_positives <- false_positive_counts %>%
group_by(factor) %>%
summarize(
avg_false_positive = mean(false_positive_count),
se_false_positive = se(false_positive_count),
count = n()
)
ggplot(average_false_positives, aes(x = factor, y = avg_false_positive, fill = factor)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = avg_false_positive - se_false_positive, ymax = avg_false_positive + se_false_positive), width = 0.2) +
geom_text(aes(label = paste0("n=", count)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
labs(title = "Illusory Truth", x = "Condition", y = "Average False Positive Count") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+   scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
illusory_truth_data <- data %>%
filter(task_name == "illusion of truth pt2") %>%
filter(stimulus != "")%>%
mutate(auxiliary_info1 = ifelse(choice > 50 & (condition == "false_new" | condition == "false_old"),
"false positive",
"not false positive"))
false_positive_counts <- illusory_truth_data %>%
filter(auxiliary_info1 == "false positive") %>%
group_by(subject, factor) %>%
summarize(false_positive_count = n()) %>%
ungroup()
# Step 2: Calculate the average and standard error of false positives per subject for each factor
average_false_positives <- false_positive_counts %>%
group_by(factor) %>%
summarize(
avg_false_positive = mean(false_positive_count),
se_false_positive = se(false_positive_count),
count = n()
)
ggplot(average_false_positives, aes(x = factor, y = avg_false_positive, fill = factor)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = avg_false_positive - se_false_positive, ymax = avg_false_positive + se_false_positive), width = 0.2) +
geom_text(aes(label = paste0("n=", count)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
labs(title = "Illusory Truth", x = "Condition", y = "Average False Positive Count") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+   scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
illusory_truth_data <- data %>%
filter(task_name == "illusion of truth pt2") %>%
filter(stimulus != "")
false_positive_counts <- illusory_truth_data %>%
filter(auxiliary_info1 == "false positive") %>%
group_by(subject, factor) %>%
summarize(false_positive_count = n()) %>%
ungroup()
# Step 2: Calculate the average and standard error of false positives per subject for each factor
average_false_positives <- false_positive_counts %>%
group_by(factor) %>%
summarize(
avg_false_positive = mean(false_positive_count),
se_false_positive = se(false_positive_count),
count = n()
)
ggplot(average_false_positives, aes(x = factor, y = avg_false_positive, fill = factor)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = avg_false_positive - se_false_positive, ymax = avg_false_positive + se_false_positive), width = 0.2) +
geom_text(aes(label = paste0("n=", count)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
labs(title = "Illusory Truth", x = "Condition", y = "Average False Positive Count") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+   scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
illusory_truth_data <- december_pilot %>%
filter(task_name == "illusion of truth pt2") %>%
filter(stimulus != "")%>%
mutate(auxiliary_info1 = ifelse(choice > 50 & (condition == "false_new" | condition == "false_old"),
"false positive",
"not false positive"))
false_positive_counts <- illusory_truth_data %>%
filter(auxiliary_info1 == "false positive") %>%
group_by(subject, factor) %>%
summarize(false_positive_count = n()) %>%
ungroup()
# Step 2: Calculate the average and standard error of false positives per subject for each factor
average_false_positives <- false_positive_counts %>%
group_by(factor) %>%
summarize(
avg_false_positive = mean(false_positive_count),
se_false_positive = se(false_positive_count),
count = n()
)
ggplot(average_false_positives, aes(x = factor, y = avg_false_positive, fill = factor)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = avg_false_positive - se_false_positive, ymax = avg_false_positive + se_false_positive), width = 0.2) +
geom_text(aes(label = paste0("n=", count)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
labs(title = "Illusory Truth", x = "Condition", y = "Average False Positive Count") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+   scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
december_pilot = read_csv('v5pilot2.csv') %>%
arrange(subject, task_name) %>%
mutate(factor = factor(factor, levels = c("Factor-Included", "Factor-Excluded")))
## 1.1 Affect ----
affect_data = december_pilot %>%
filter(task_name == "affect heuristic")%>%
mutate(choice = as.numeric(choice))
summary_affect_data <- affect_data %>%
group_by(condition) %>%
mutate(condition = factor(condition, levels = c("With passage", "without passage"))) %>%
summarize(
mean_choice = mean(choice),
se_choice = se(choice),
count = n()
)
ggplot(summary_affect_data, aes(x = condition, y = mean_choice, fill = condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_choice - se_choice, ymax = mean_choice + se_choice), width = 0.2) +
labs(title = "Affect", x = "Condition", y = "How beneficial is natural gas") +
geom_text(aes(label = paste0("n=", count)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+   scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
t.test(choice ~ factor, data = affect_data)
new_hindsight_data = december_pilot %>%
filter(task_name == "hindsight effect")%>%
filter(is.na(stimulus)) %>%
mutate(choice = as.numeric(choice))
summary_new_hindsight_data <- new_hindsight_data %>%
group_by(condition) %>%
mutate(condition = factor(condition, levels = c("knowledge of outcome", "no knowledge of outcome"))) %>%
summarize(
mean_choice = mean(choice),
se_choice = se(choice),
count = n()
)
ggplot(summary_new_hindsight_data, aes(x = condition, y = mean_choice, fill = condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_choice - se_choice, ymax = mean_choice + se_choice), width = 0.2) +
labs(title = "Hindsight", x = "Condition", y = "Percent Likelihood of British Victory") +
geom_text(aes(label = paste0("n=", count)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+   scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
t.test(choice ~ factor, data = new_hindsight_data)
status_quo_data <- december_pilot %>%
filter(task_name == "status_quo") %>%
filter(is.na(stimulus)) %>%
mutate(choice_binary = as.numeric(choice == "status quo"))%>%
mutate(condition = factor(condition, levels = c("Factor-Included", "Factor-Excluded")))
summary_status_quo_data <- status_quo_data %>%
group_by(condition) %>%
summarize(
mean_choice = mean(choice_binary),
se_choice = se.prop(choice_binary),
count = n()
)
ggplot(summary_status_quo_data, aes(x = condition, y = mean_choice, fill = condition)) +
geom_bar(stat = "identity") +
labs(title = "Choices to continue the status quo", x = "Condition", y = "Percent subjects who recommended the status quo") +
geom_text(aes(label = paste0("n=", count)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
theme_custom() +
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+   scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
status_quo_choices_ex <- status_quo_data %>%
filter(factor == "Factor-Excluded") %>%
pull(choice_binary)
status_quo_choices_in <- status_quo_data %>%
filter(factor == "Factor-Included") %>%
pull(choice_binary)
#analysis -- is there a better way to do this?
prop_ex <- sum(status_quo_choices_ex) / length(status_quo_choices_ex)
prop_in <- sum(status_quo_choices_in) / length(status_quo_choices_in)
successes <- c(sum(status_quo_choices_ex), sum(status_quo_choices_in))
trials <- c(length(status_quo_choices_ex), length(status_quo_choices_in))
test_result <- prop.test(successes, trials, alternative = "less")
print(test_result)
summary(glm(choice_binary ~ condition, data = status_quo_data, family = 'binomial'))
sunk_cost_data <- december_pilot %>%
filter(task_name == "sunk_cost2 effect") %>%
mutate(switched = choice == "Don't Continue Investing",
switched.num = as.numeric(switched))
percentage_sunk_cost_data <- sunk_cost_data %>%
group_by(condition) %>%
mutate(condition = factor(condition, levels = c("Sunk Cost", "No Sunk Cost"))) %>%
summarize(
total_in_condition = n(),  # Total number of subjects in each condition
switched_count = sum(choice == "Don't Continue Investing")  # Count who chose "Solar-powered pump"
) %>%
mutate(percentage_switched = (switched_count / total_in_condition) * 100)
summary(glm(switched ~ condition, data = sunk_cost_data, family = 'binomial'))
ggplot(percentage_sunk_cost_data, aes(x = condition, y = percentage_switched, fill = condition)) +
geom_bar(stat = "identity") +
labs(title = "Percentage Who Stopped Investing", x = "Condition", y = "Percentage of Choices to Stop Investing") +
geom_text(aes(label = paste0("n=", total_in_condition)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+   scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
solar_powered_counts <- percentage_sunk_cost_data$solar_powered_count
total_counts <- percentage_sunk_cost_data$total_in_condition
prop_test_result <- prop.test(solar_powered_counts, total_counts)
solar_powered_counts <- percentage_sunk_cost_data$solar_powered_count
total_counts <- percentage_sunk_cost_data$total_in_condition
prop_test_result <- prop.test(solar_powered_counts, total_counts)
summary(glm(switched ~ condition, data = sunk_cost_data, family = 'binomial'))
test = brm(switched.num ~ condition, data = sunk_cost_data, family = 'binomial')
simulation_data = december_pilot %>%
filter(task_name == "simulation")%>%
filter(is.na(stimulus)) %>%
mutate(choice = as.numeric(choice))
summary_simulation_data <- simulation_data %>%
group_by(condition) %>%
mutate(condition = factor(condition, levels = c("barely missed", "missed"))) %>%
summarize(
mean_choice = mean(choice),
se_choice = se(choice),
count = n()
)
ggplot(summary_simulation_data, aes(x = condition, y = mean_choice, fill = condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_choice - se_choice, ymax = mean_choice + se_choice), width = 0.2) +
labs(title = "Simulation", x = "Condition", y = "How upset would he feel") +
geom_text(aes(label = paste0("n=", count)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+   scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
t.test(choice ~ factor, data = simulation_data)
status_quo_data <- december_pilot %>%
filter(task_name == "status_quo") %>%
filter(is.na(stimulus))
View(status_quo_data)
status_quo_data <- december_pilot %>%
filter(task_name == "status_quo") %>%
filter(is.na(stimulus)) %>%
mutate(choice = ifelse(auxiliary_info1 == "Allocate 50% to auto safety and 50% to highway safety status quo: 50/50",
"status quo",
choice)) %>%
mutate(choice_binary = as.numeric(choice == "status quo"))%>%
mutate(condition = factor(condition, levels = c("Factor-Included", "Factor-Excluded")))
summary_status_quo_data <- status_quo_data %>%
group_by(condition) %>%
summarize(
mean_choice = mean(choice_binary),
se_choice = se.prop(choice_binary),
count = n()
)
ggplot(summary_status_quo_data, aes(x = condition, y = mean_choice, fill = condition)) +
geom_bar(stat = "identity") +
labs(title = "Choices to continue the status quo", x = "Condition", y = "Percent subjects who recommended the status quo") +
geom_text(aes(label = paste0("n=", count)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
theme_custom() +
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+   scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
status_quo_choices_ex <- status_quo_data %>%
filter(factor == "Factor-Excluded") %>%
pull(choice_binary)
status_quo_choices_in <- status_quo_data %>%
filter(factor == "Factor-Included") %>%
pull(choice_binary)
#analysis -- is there a better way to do this?
prop_ex <- sum(status_quo_choices_ex) / length(status_quo_choices_ex)
prop_in <- sum(status_quo_choices_in) / length(status_quo_choices_in)
successes <- c(sum(status_quo_choices_ex), sum(status_quo_choices_in))
trials <- c(length(status_quo_choices_ex), length(status_quo_choices_in))
test_result <- prop.test(successes, trials, alternative = "less")
print(test_result)
summary(glm(choice_binary ~ condition, data = status_quo_data, family = 'binomial'))
test_result <- prop.test(successes, trials, alternative = "less")
print(test_result)
