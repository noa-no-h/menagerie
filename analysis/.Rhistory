#In&Effect, Ex
two_colors <- c("#f1c40f", "#e74c3c")
theme_custom <- function() {
theme_minimal(base_family = "Optima") +
theme(
axis.text.x = element_text(size = 15, margin = margin(t = 0, r = 0, b = 0, l = 1)),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15),
plot.title = element_text(size = 18, face = "bold"),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
strip.text = element_text(size = 15),
aspect.ratio = 1,  # Set the aspect ratio here
panel.grid.major.x = element_blank(),  # Remove major vertical grid lines
panel.grid.minor.x = element_blank()   # Remove minor vertical grid lines
)
}
se = function(x) {return(sd(x, na.rm = T) / sqrt(sum(!is.na(x))))}
se.prop = function(x) {return(sqrt(mean(x, na.rm = T) * (1-mean(x, na.rm = T)) / sum(!is.na(x))))}
dodge <- position_dodge(width=0.9)
sunkcost_data <- data %>%
filter(task_name == "sunk_cost effect") %>%
mutate(switched = choice == 'Solar-powered Pump',
switched.num = as.numeric(switched),
condition = factor(condition, levels = c("Sunk Cost", "No Sunk Cost")))
sunkcost_summary <- sunkcost_data %>%
group_by(condition) %>%
summarize(mean_switched = mean(switched),
se_switched = se.prop(switched),
total = n())
ggplot(sunkcost_summary, aes(x = condition, y = mean_switched, fill = condition)) +
geom_bar(stat = "identity") +
geom_errorbar(
aes(ymin = mean_switched - se_switched,
ymax = mean_switched + se_switched),
width = 0.2
) +
labs(title = "Percentage Switching Projects by Condition", x = "Condition", y = "Percentage of Choices to Switch") +
geom_text(aes(label = paste0("n=", total)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+   scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
sunkcost_effect_analysis = brm(switched.num ~ condition,
data = sunk_cost_data,
family = 'bernoulli')
summary(sunkcost_effect_analysis)
hdi(sunkcost_effect_analysis, effects = 'all')
## in experience condition
sunkcost_data_introspection_experience = sunkcost_data %>%
filter(factor == 'Factor-Included') %>%
mutate(effect_size = !switched,
showed_effect = factor(!switched, c(1,0), c('Effect', 'No effect')))
# dichotomized
sunkcost_summary_introspection_experience <- sunkcost_data_introspection_experience %>%
group_by(showed_effect) %>%
summarize(
mean_introspect_rating = mean(as.numeric(introspect_rating), na.rm = TRUE),
se_introspect_rating = se(introspect_rating)
)
ggplot(sunkcost_summary_introspection_experience, aes(x = showed_effect, y = mean_introspect_rating, fill = showed_effect)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "sunkcost introspection ratings", x = "Showed effect", y = "introspection rating") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+
scale_x_discrete(labels = function(x) str_wrap(x, width = 14))+
scale_y_continuous(limits = c(0, 100))
View(sunkcost_data)
## in experience condition
sunkcost_data_introspection_experience = sunkcost_data %>%
filter(factor == 'Factor-Included') %>%
mutate(effect_size = !switched,
showed_effect = factor(!switched, c(T,F), c('Effect', 'No effect')))
# dichotomized
sunkcost_summary_introspection_experience <- sunkcost_data_introspection_experience %>%
group_by(showed_effect) %>%
summarize(
mean_introspect_rating = mean(as.numeric(introspect_rating), na.rm = TRUE),
se_introspect_rating = se(introspect_rating)
)
ggplot(sunkcost_summary_introspection_experience, aes(x = showed_effect, y = mean_introspect_rating, fill = showed_effect)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "sunkcost introspection ratings", x = "Showed effect", y = "introspection rating") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+
scale_x_discrete(labels = function(x) str_wrap(x, width = 14))+
scale_y_continuous(limits = c(0, 100))
sunkcost_summary_introspection_both <- sunkcost_data %>%
mutate(condition = factor(condition, levels = c("Factor-Included", "Factor-Excluded"))) %>%
group_by(condition) %>%
summarize(
mean_introspect_rating = mean(introspect_rating), # check this
se_introspect_rating = se(introspect_rating)
)
ggplot(sunkcost_summary_introspection_both, aes(x = condition, y = mean_introspect_rating, fill = condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "Status Quo Introspection Ratings", x = "Condition", y = "Introspection rating") +
theme_custom() +
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+
scale_x_discrete(labels = function(x) str_wrap(x, width = 14))+
scale_y_continuous(limits = c(0, 100))
View(sunkcost_data)
sunkcost_summary_introspection_both <- sunkcost_data %>%
mutate(condition = factor(factor, levels = c("Factor-Included", "Factor-Excluded"))) %>%
group_by(condition) %>%
summarize(
mean_introspect_rating = mean(introspect_rating), # check this
se_introspect_rating = se(introspect_rating)
)
ggplot(sunkcost_summary_introspection_both, aes(x = condition, y = mean_introspect_rating, fill = condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "Status Quo Introspection Ratings", x = "Condition", y = "Introspection rating") +
theme_custom() +
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+
scale_x_discrete(labels = function(x) str_wrap(x, width = 14))+
scale_y_continuous(limits = c(0, 100))
sunkcost_summary_introspection_both <- sunkcost_data %>%
mutate(condition = factor(factor, levels = c("Factor-Included", "Factor-Excluded"))) %>%
group_by(condition) %>%
summarize(
mean_introspect_rating = mean(introspect_rating), # check this
se_introspect_rating = se(introspect_rating)
)
ggplot(sunkcost_summary_introspection_both, aes(x = condition, y = mean_introspect_rating, fill = condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "Status Quo Introspection Ratings", x = "Condition", y = "Introspection rating") +
theme_custom() +
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+
scale_x_discrete(labels = function(x) str_wrap(x, width = 14))+
scale_y_continuous(limits = c(0, 100))
mean(sunkcost_data$introspect_rating[sunkcost_data$factor == 'Factor-Included'])
mean(sunkcost_data$introspect_rating[sunkcost_data$factor == 'Factor-Excluded'])
mean(sunkcost_data$introspect_rating[sunkcost_data$condition == 'Sunk Cost'])
sunkcost_summary_introspection_experience
View(sunkcost_data_introspection_experience)
list(a,b,c)
list(1,2,3)
statusquo_data <- data %>%
filter(task_name == "status_quo") %>%
mutate(choice_binary = as.numeric(choice == "70/30"))%>%
mutate(condition = factor(condition, levels = c("Factor-Included", "Factor-Excluded")))
statusquo_summary <- statusquo_data %>%
group_by(condition) %>%
summarize(
mean_choice = mean(choice_binary),
se_choice = se.prop(choice_binary),
count = n()
)
ggplot(statusquo_summary, aes(x = condition, y = mean_choice, fill = condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_choice - se_choice,
ymax = mean_choice + se_choice),
width = 0.2)+
labs(title = "Choices to continue the status quo", x = "Condition", y = "Percent subjects who recommended the status quo") +
geom_text(aes(label = paste0("n=", count)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
theme_custom() +
scale_fill_manual(values = in_and_ex)+
guides(fill = "none")+
scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
all_data_introspection_experience = list(halo_data_introspection_experience,
recognition_data_introspection_experience,
reference_data_introspection_experience,
representativeness_data_introspection_experience,
sunkcost_data_introspection_experience)
length(all_data_introspection_experience)
i = 1
all_data_introspection_experience[[i]]
all_data_introspection_experience[[i]] %>%
select(subject, task_name, introspect_rating, effect_size, showed_effect)
halo_data_introspection = halo_data %>%
filter(stimulus == "")
halo_data_introspection_experience = halo_data_introspection %>%
filter(factor == 'Factor-Included')
all_data_introspection_experience = list(halo_data_introspection_experience,
recognition_data_introspection_experience,
reference_data_introspection_experience,
representativeness_data_introspection_experience,
sunkcost_data_introspection_experience)
all_data_introspection_experience[[i]] %>%
select(subject, task_name, introspect_rating, effect_size, showed_effect)
halo_data_introspection_experience = halo_data_introspection %>%
filter(factor == 'Factor-Included')
halo_effectsizes <- halo_data_choices %>%
filter(factor == 'Factor-Included') %>%
group_by(subject, condition) %>%
summarize(mean_choice = mean(choice), .groups = 'drop') %>%
pivot_wider(names_from = condition, values_from = mean_choice) %>%
mutate(effect_size = attractive - unattractive) %>%
select(-attractive, -unattractive)
halo_data_introspection_experience = halo_data_introspection %>%
filter(factor == 'Factor-Included')
halo_effectsizes <- halo_data_choices %>%
filter(factor == 'Factor-Included') %>%
group_by(subject, condition) %>%
summarize(mean_choice = mean(choice), .groups = 'drop') %>%
pivot_wider(names_from = condition, values_from = mean_choice) %>%
mutate(effect_size = attractive - unattractive) %>%
select(-attractive, -unattractive)
halo_data_introspection_experience = halo_data_introspection_experience %>%
left_join(halo_effectsizes, by = 'subject') %>%
mutate(showed_effect = factor(effect_size > 0, c(T,F), c('Showed effect', 'No effect')))
all_data_introspection_experience = list(halo_data_introspection_experience,
recognition_data_introspection_experience,
reference_data_introspection_experience,
representativeness_data_introspection_experience,
sunkcost_data_introspection_experience)
all_data_introspection_experience[[i]] %>%
select(subject, task_name, introspect_rating, effect_size, showed_effect)
all_list_introspection_experience = list(halo_data_introspection_experience,
recognition_data_introspection_experience,
reference_data_introspection_experience,
representativeness_data_introspection_experience,
sunkcost_data_introspection_experience)
all_data_introspection_experience = all_list_introspection_experience[[1]] %>%
select(subject, task_name, introspect_rating, effect_size, showed_effect)
all_data_introspection_experience = all_list_introspection_experience[[1]] %>%
select(subject, task_name, introspect_rating, effect_size, showed_effect)
for (2 in 1:length(all_data_introspection_experience)) {
for (i in 2:length(all_data_introspection_experience)) {
all_data_introspection_experience = all_data_introspection_experience %>%
rbind(all_data_introspection_experience[[i]] %>%
select(subject, task_name, introspect_rating, effect_size, showed_effect))
}
i
all_data_introspection_experience[[i]] %>%
select(subject, task_name, introspect_rating, effect_size, showed_effect)
all_data_introspection_experience[[2]]
for (i in 2:length(all_data_introspection_experience)) {
all_data_introspection_experience = all_data_introspection_experience %>%
rbind(all_list_introspection_experience[[i]] %>%
select(subject, task_name, introspect_rating, effect_size, showed_effect))
}
i
all_list_introspection_experience[[2]]
omission_data <- data %>%
filter(task_name == "omission principle") %>%
mutate(choice = as.numeric(choice))
omission_summary <- omission_data %>%
group_by(condition) %>%
mutate(condition = factor(condition, levels = c("commission", "omission"))) %>%
summarize(
mean_choice = mean(choice),
se_choice = se(choice),
count = n()
)
ggplot(omission_summary, aes(x = condition, y = mean_choice, fill = condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_choice - se_choice, ymax = mean_choice + se_choice), width = 0.2) +
labs(title = "Omission Principle", x = "Condition", y = "Forbidden to Obligatory") +
geom_text(aes(label = paste0("n=", count)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = "none")+
scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
omission_analysis = brm(choice ~ condition, omission_data)
omission_data_introspection = omission_data %>%
filter(stimulus == "")
## in experience condition
omission_data_introspection_experience <- omission_data_introspection %>%
filter(factor == 'Factor-Included') %>%
mutate(effect_size = choice,
showed_effect = factor(choice < 4, c(T,F), c('Effect', 'No effect')))
# dichotomized
omission_summary_introspection_experience <- omission_data_introspection_experience %>%
group_by(showed_effect) %>%
summarize(
mean_introspect_rating = mean(as.numeric(introspect_rating), na.rm = TRUE),
se_introspect_rating = se(introspect_rating)
)
all_list_introspection_experience = list(halo_data_introspection_experience,
omission_data_introspection_experience,
recognition_data_introspection_experience,
reference_data_introspection_experience,
representativeness_data_introspection_experience,
sunkcost_data_introspection_experience)
all_data_introspection_experience = all_list_introspection_experience[[1]] %>%
select(subject, task_name, introspect_rating, effect_size, showed_effect)
for (i in 2:length(all_data_introspection_experience)) {
all_data_introspection_experience = all_data_introspection_experience %>%
rbind(all_list_introspection_experience[[i]] %>%
select(subject, task_name, introspect_rating, effect_size, showed_effect))
}
i
##13.2 are people aware of the effect? -----------------------------------------
recognition_data_introspection <- data %>%
filter(task_name == "recognition")
## in experience condition
recognition_data_introspection_experience <- recognition_data_introspection %>%
filter(factor == "Factor-Included")
recognition_effectsize = recognition_data %>%
group_by(subject) %>%
summarize(effect_size = mean(chose_recognizable)) %>%
select(subject, effect_size)
recognition_data_introspection_experience = recognition_data_introspection_experience %>%
left_join(recognition_data_effectsize, 'subject') %>%
mutate(showed_effect = effect_size > 0.5)
# dichotomous
recognition_summary_introspection_experience = recognition_data_introspection_experience %>%
group_by(showed_effect) %>%
summarize(mean_introspect_rating = mean(introspect_rating),
se_introspect_rating = se(introspect_rating))
all_list_introspection_experience = list(halo_data_introspection_experience,
omission_data_introspection_experience,
recognition_data_introspection_experience,
reference_data_introspection_experience,
representativeness_data_introspection_experience,
sunkcost_data_introspection_experience)
all_data_introspection_experience = all_list_introspection_experience[[1]] %>%
select(subject, task_name, introspect_rating, effect_size, showed_effect)
for (i in 2:length(all_data_introspection_experience)) {
all_data_introspection_experience = all_data_introspection_experience %>%
rbind(all_list_introspection_experience[[i]] %>%
select(subject, task_name, introspect_rating, effect_size, showed_effect))
}
i
all_list_introspection_experience[[i]] %>%
select(subject, task_name, introspect_rating, effect_size, showed_effect)
all_data_introspection_experience
halo_data_introspection_experience = halo_data_introspection %>%
filter(factor == 'Factor-Included')
halo_effectsizes <- halo_data_choices %>%
filter(factor == 'Factor-Included') %>%
group_by(subject, condition) %>%
summarize(mean_choice = mean(choice), .groups = 'drop') %>%
pivot_wider(names_from = condition, values_from = mean_choice) %>%
mutate(effect_size = attractive - unattractive) %>%
select(-attractive, -unattractive)
halo_data_introspection_experience = halo_data_introspection_experience %>%
left_join(halo_effectsizes, by = 'subject') %>%
mutate(showed_effect = factor(effect_size > 0, c(T,F), c('Effect', 'No effect')))
omission_data_introspection = omission_data %>%
filter(stimulus == "")
## in experience condition
omission_data_introspection_experience <- omission_data_introspection %>%
filter(factor == 'Factor-Included') %>%
mutate(effect_size = choice,
showed_effect = factor(choice < 4, c(T,F), c('Effect', 'No effect')))
# dichotomized
omission_summary_introspection_experience <- omission_data_introspection_experience %>%
group_by(showed_effect) %>%
summarize(
mean_introspect_rating = mean(as.numeric(introspect_rating), na.rm = TRUE),
se_introspect_rating = se(introspect_rating)
)
##13.2 are people aware of the effect? -----------------------------------------
recognition_data_introspection <- data %>%
filter(task_name == "recognition")
## in experience condition
recognition_data_introspection_experience <- recognition_data_introspection %>%
filter(factor == "Factor-Included")
recognition_effectsize = recognition_data %>%
group_by(subject) %>%
summarize(effect_size = mean(chose_recognizable)) %>%
select(subject, effect_size)
recognition_data_introspection_experience = recognition_data_introspection_experience %>%
left_join(recognition_data_effectsize, 'subject') %>%
mutate(showed_effect = effect_size > 0.5)
# in experience condition
reference_median = mean(reference_data$choice_parsed[reference_data$factor == 'Factor-Excluded'])
reference_data_introspection_experience = reference_data %>%
filter(factor == 'Factor-Included') %>%
mutate(effect_size = choice_parsed,
showed_effect = factor(choice_parsed > reference_median, c(T,F), c('Effect', 'No effect')))
# dichotomized
reference_summary_introspection_experience <- reference_data_introspection_experience %>%
group_by(showed_effect) %>%
summarize(
mean_introspect_rating = mean(as.numeric(introspect_rating), na.rm = TRUE),
se_introspect_rating = se(introspect_rating)
)
# in experience condition
representativeness_median = mean(representativeness_data$choice[representativeness_data$factor == 'Factor-Excluded'])
representativeness_data_introspection_experience = representativeness_data %>%
filter(factor == 'Factor-Included') %>%
mutate(effect_size = choice,
showed_effect = factor(choice > representativeness_median, c(T,F), c('Effect', 'No effect')))
# dichotomized
representativeness_summary_introspection_experience <- representativeness_data_introspection_experience %>%
group_by(showed_effect) %>%
summarize(
mean_introspect_rating = mean(as.numeric(introspect_rating), na.rm = TRUE),
se_introspect_rating = se(introspect_rating)
)
## in experience condition
statusquo_data_introspection_experience = statusquo_data %>%
filter(factor == 'Factor-Included') %>%
mutate(effect_size = choice_binary,
showed_effect = factor(choice_binary, c(1,0), c('Effect', 'No effect')))
# dichotomized
statusquo_summary_introspection_experience <- statusquo_data_introspection_experience %>%
group_by(showed_effect) %>%
summarize(
mean_introspect_rating = mean(as.numeric(introspect_rating), na.rm = TRUE),
se_introspect_rating = se(introspect_rating)
)
ggplot(statusquo_summary_introspection_experience, aes(x = showed_effect, y = mean_introspect_rating, fill = showed_effect)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "statusquo introspection ratings", x = "Showed effect", y = "introspection rating") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+
scale_x_discrete(labels = function(x) str_wrap(x, width = 14))+
scale_y_continuous(limits = c(0, 100))
## in experience condition
statusquo_data_introspection_experience = statusquo_data %>%
filter(factor == 'Factor-Included') %>%
mutate(effect_size = choice_binary,
showed_effect = factor(choice_binary, c(1,0), c('Effect', 'No effect')))
# dichotomized
statusquo_summary_introspection_experience <- statusquo_data_introspection_experience %>%
group_by(showed_effect) %>%
summarize(
mean_introspect_rating = mean(as.numeric(introspect_rating), na.rm = TRUE),
se_introspect_rating = se(introspect_rating)
)
## in experience condition
statusquo_data_introspection_experience = statusquo_data %>%
filter(factor == 'Factor-Included') %>%
mutate(effect_size = choice_binary,
showed_effect = factor(choice_binary, c(1,0), c('Effect', 'No effect')))
# dichotomized
statusquo_summary_introspection_experience <- statusquo_data_introspection_experience %>%
group_by(showed_effect) %>%
summarize(
mean_introspect_rating = mean(as.numeric(introspect_rating), na.rm = TRUE),
se_introspect_rating = se(introspect_rating)
)
## in experience condition
sunkcost_data_introspection_experience = sunkcost_data %>%
filter(factor == 'Factor-Included') %>%
mutate(effect_size = !switched,
showed_effect = factor(!switched, c(T,F), c('Effect', 'No effect')))
# dichotomized
sunkcost_summary_introspection_experience <- sunkcost_data_introspection_experience %>%
group_by(showed_effect) %>%
summarize(
mean_introspect_rating = mean(as.numeric(introspect_rating), na.rm = TRUE),
se_introspect_rating = se(introspect_rating)
)
all_list_introspection_experience = list(halo_data_introspection_experience,
omission_data_introspection_experience,
recognition_data_introspection_experience,
reference_data_introspection_experience,
representativeness_data_introspection_experience,
sunkcost_data_introspection_experience)
all_data_introspection_experience = all_list_introspection_experience[[1]] %>%
select(subject, task_name, introspect_rating, effect_size, showed_effect)
for (i in 2:length(all_data_introspection_experience)) {
all_data_introspection_experience = all_data_introspection_experience %>%
rbind(all_list_introspection_experience[[i]] %>%
select(subject, task_name, introspect_rating, effect_size, showed_effect))
}
i
all_data_introspection_experience
all_list_introspection_experience[[5]]
all_list_introspection_experience[[i]]$effect_size
all_list_introspection_experience[[i]]$showed_effect
all_list_introspection_experience[[i]] %>%
select(subject, task_name, introspect_rating, effect_size, showed_effect)
all_list_introspection_experience[[4]] %>%
select(subject, task_name, introspect_rating, effect_size, showed_effect)
all_data_introspection_experience
all_list_introspection_experience[[3]]
recognition_effectsize = recognition_data %>%
group_by(subject) %>%
summarize(effect_size = mean(chose_recognizable)) %>%
select(subject, effect_size)
recognition_data_introspection_experience = recognition_data_introspection_experience %>%
left_join(recognition_data_effectsize, 'subject') %>%
mutate(showed_effect = factor(effect_size > 0.5, c(T,F), c('Effect', 'No effect')))
## in experience condition
recognition_data_introspection_experience <- recognition_data_introspection %>%
filter(factor == "Factor-Included")
recognition_effectsize = recognition_data %>%
group_by(subject) %>%
summarize(effect_size = mean(chose_recognizable)) %>%
select(subject, effect_size)
recognition_data_introspection_experience = recognition_data_introspection_experience %>%
left_join(recognition_data_effectsize, 'subject') %>%
mutate(showed_effect = factor(effect_size > 0.5, c(T,F), c('Effect', 'No effect')))
all_list_introspection_experience = list(halo_data_introspection_experience,
omission_data_introspection_experience,
recognition_data_introspection_experience,
reference_data_introspection_experience,
representativeness_data_introspection_experience,
sunkcost_data_introspection_experience)
all_data_introspection_experience = all_list_introspection_experience[[1]] %>%
select(subject, task_name, introspect_rating, effect_size, showed_effect)
for (i in 2:length(all_data_introspection_experience)) {
all_data_introspection_experience = all_data_introspection_experience %>%
rbind(all_list_introspection_experience[[i]] %>%
select(subject, task_name, introspect_rating, effect_size, showed_effect))
}
all_data_introspection_experience
save.image('novemberAnalysis_AM_output.rdata')
