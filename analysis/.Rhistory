scale_fill_manual(values = c("Factor-Included" = "#4FADEA", "Factor-Excluded" = "#FFC000")) +
scale_color_manual(values = c("Factor-Included" = "#4FADEA", "Factor-Excluded" = "#FFC000")) +
geom_errorbar(aes(ymin = introspect.m - introspect.se, ymax = introspect.m + introspect.se, color = factor), width = 0.5) +
theme_black() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 14)) +
#theme(legend.position = 'none') +
labs(x = 'Task', y = 'Rating of factor influence')
ggplot(df.introspection %>% filter(task_name %in% new.tasks), aes(x = task_name, y = introspect.m, fill = factor)) +
geom_point(size = 4,pch=21,color='white') +
#geom_jitter(data = df.test %>% filter(task_name %in% new.tasks), pch=21, aes(y = introspect_rating), size = 1, alpha = .5, width = .2) +
scale_fill_manual(values = c("Factor-Included" = "#4FADEA", "Factor-Excluded" = "#FFC000")) +
scale_color_manual(values = c("Factor-Included" = "#4FADEA", "Factor-Excluded" = "#FFC000")) +
geom_errorbar(aes(ymin = introspect.m - introspect.se, ymax = introspect.m + introspect.se, color = factor), width = 0.5) +
theme_black() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 14)) +
#theme(legend.position = 'none') +
labs(x = 'Task', y = 'Rating of factor influence') +
scale_y_continuous(limits = c(0,1))
ggplot(df.introspection.all, aes(x = factor, y = introspect.m)) +
geom_point() +
geom_errorbar(aes(ymin = introspect.m - introspect.se, ymax = introspect.m + introspect.se)) +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 10))
df.introspection.all = df %>%
filter(task_name %in% task.names) %>%
group_by(factor) %>%
filter(!is.na(introspect_rating)) %>%
filter(familiarity == "No") %>%
mutate(introspect_rating = introspect_rating/10) %>%
summarize(introspect.m = mean(introspect_rating), introspect.se = se(introspect_rating))
df.introspection.all = df %>%
filter(task_name %in% new.tasks) %>%
group_by(factor) %>%
filter(!is.na(introspect_rating)) %>%
filter(familiarity == "No") %>%
mutate(introspect_rating = introspect_rating/10) %>%
summarize(introspect.m = mean(introspect_rating), introspect.se = se(introspect_rating))
ggplot(df.introspection.all, aes(x = factor, y = introspect.m)) +
geom_point() +
geom_errorbar(aes(ymin = introspect.m - introspect.se, ymax = introspect.m + introspect.se)) +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 10))
ggplot(df.introspection.all, aes(x = factor, y = introspect.m)) +
geom_point() +
geom_errorbar(aes(ymin = introspect.m - introspect.se, ymax = introspect.m + introspect.se)) +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 10)) +
labs(x = 'Condition', y = 'Rating of factor influence') +
introspect.model <- lmer(introspect_rating ~ factor + (1 | subject) + (1 | task_name), data = df %>% filter(familiarity == 'No'))
ggplot(df.introspection.all, aes(x = factor, y = introspect.m)) +
geom_point() +
geom_errorbar(aes(ymin = introspect.m - introspect.se, ymax = introspect.m + introspect.se)) +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 10)) +
labs(x = 'Condition', y = 'Rating of factor influence') +
theme_black()
ggplot(df.introspection.all, aes(x = factor, y = introspect.m)) +
geom_point(color = 'white') +
geom_errorbar(aes(ymin = introspect.m - introspect.se, ymax = introspect.m + introspect.se), color = 'white') +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 10)) +
labs(x = 'Condition', y = 'Rating of factor influence') +
theme_black()
ggplot(df.introspection.all, aes(x = factor, y = introspect.m)) +
geom_point(color = 'white') +
geom_errorbar(aes(ymin = introspect.m - introspect.se, ymax = introspect.m + introspect.se), color = 'white', width = 0.2) +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 10)) +
labs(x = 'Condition', y = 'Rating of factor influence') +
theme_black()
ggplot(df.introspection.all, aes(x = factor, y = introspect.m)) +
geom_point(color = 'white', size = 5) +
geom_errorbar(aes(ymin = introspect.m - introspect.se, ymax = introspect.m + introspect.se), color = 'white', width = 0.2) +
theme_classic() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 10)) +
labs(x = 'Condition', y = 'Rating of factor influence') +
theme_black()
introspect.model <- lmer(introspect_rating ~ factor + (1 | subject) + (1 | task_name), data = df %>% filter(familiarity == 'No', task_name %in% new.tasks))
summary(introspect.model)
# restricting to factor included, splitting by whether they showed effect
df.introspection2 = df %>%
filter(factor == 'Factor-Included') %>%
group_by(effect.size.fac, task_name) %>%
filter(!is.na(introspect_rating)) %>%
filter(familiarity == "No") %>%
mutate(introspect_rating = introspect_rating/10) %>%
summarize(introspect.m = mean(introspect_rating), introspect.se = se(introspect_rating)) %>%
filter(!is.na(effect.size.fac))
df.introspection.all2 = df %>%
filter(factor == 'Factor-Included') %>%
group_by(effect.size.fac) %>%
filter(!is.na(introspect_rating)) %>%
filter(familiarity == "No") %>%
mutate(introspect_rating = introspect_rating/10) %>%
summarize(introspect.m = mean(introspect_rating), introspect.se = se(introspect_rating)) %>%
filter(!is.na(effect.size.fac))
ggplot(df.introspection2, aes(x = task_name, y = introspect.m, color = effect.size.fac)) +
geom_point(size = 4) +
scale_color_manual(values = c('FALSE' = "red", 'TRUE' = "green")) +
geom_errorbar(aes(ymin = introspect.m - introspect.se, ymax = introspect.m + introspect.se)) +
theme_black() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 14),
legend.position = 'none') +
labs(x = 'Task', y = 'Rating of factor influence')
ggplot(df.introspection2, aes(x = task_name, y = introspect.m, color = effect.size.fac)) +
geom_point(size = 4,pch=21,color='white') +
#geom_jitter(data = df.test, pch=21, aes(y = introspect_rating), size = 1, alpha = .5, width = .2) +
scale_fill_manual(values = c("Factor-Included" = "#4FADEA", "Factor-Excluded" = "#FFC000")) +
scale_color_manual(values = c("Factor-Included" = "#4FADEA", "Factor-Excluded" = "#FFC000")) +
geom_errorbar(aes(ymin = introspect.m - introspect.se, ymax = introspect.m + introspect.se)) +
theme_black() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 10),
legend.position = 'none')
ggplot(df.introspection2, aes(x = task_name, y = introspect.m, color = effect.size.fac)) +
geom_point(size = 4) +
scale_color_manual(values = c('FALSE' = "red", 'TRUE' = "green")) +
geom_errorbar(aes(ymin = introspect.m - introspect.se, ymax = introspect.m + introspect.se)) +
theme_black() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 14),
legend.position = 'none') +
labs(x = 'Task', y = 'Rating of factor influence')
ggplot(df.introspection2 %>% filter(task_name %in% new.tasks), aes(x = task_name, y = introspect.m, color = effect.size.fac)) +
geom_point(size = 4) +
scale_color_manual(values = c('FALSE' = "red", 'TRUE' = "green")) +
geom_errorbar(aes(ymin = introspect.m - introspect.se, ymax = introspect.m + introspect.se)) +
theme_black() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 14),
legend.position = 'none') +
labs(x = 'Task', y = 'Rating of factor influence')
ggplot(df.introspection2 %>% filter(task_name %in% new.tasks), aes(x = task_name, y = introspect.m, color = effect.size.fac)) +
geom_point(size = 4) +
scale_color_manual(values = c('FALSE' = "red", 'TRUE' = "green")) +
geom_errorbar(aes(ymin = introspect.m - introspect.se, ymax = introspect.m + introspect.se)) +
theme_black() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 14)) +
labs(x = 'Task', y = 'Rating of factor influence')
df.introspection.all2 = df %>%
filter(factor == 'Factor-Included', task_name %in% new.tasks) %>%
group_by(effect.size.fac) %>%
filter(!is.na(introspect_rating)) %>%
filter(familiarity == "No") %>%
mutate(introspect_rating = introspect_rating/10) %>%
summarize(introspect.m = mean(introspect_rating), introspect.se = se(introspect_rating)) %>%
filter(!is.na(effect.size.fac))
ggplot(df.introspection.all2, aes(x = effect.size.fac, y = introspect.m, color = effect.size.fac)) +
geom_point(size = 5) +
geom_errorbar(aes(ymin = introspect.m - introspect.se, ymax = introspect.m + introspect.se), width = .2) +
scale_color_manual(values = c('FALSE' = "red", 'TRUE' = "green")) +
theme_black() +
scale_y_continuous(limits = c(0.4, 0.6), breaks = c(0.4, 0.6)) +
labs(x = '\nDemonstrated effect?', y = 'Rating of factor influence') +
theme(legend.position = 'none')
ggplot(df.introspection.all2, aes(x = effect.size.fac, y = introspect.m, color = effect.size.fac)) +
geom_point(size = 5) +
geom_errorbar(aes(ymin = introspect.m - introspect.se, ymax = introspect.m + introspect.se), width = .2) +
scale_color_manual(values = c('FALSE' = "red", 'TRUE' = "green")) +
theme_black() +
scale_y_continuous(limits = c(0.3, 0.7), breaks = c(0.3, 0.7)) +
labs(x = '\nDemonstrated effect?', y = 'Rating of factor influence') +
theme(legend.position = 'none')
introspect.model2 <- lmer(introspect_rating ~ effect.size.fac + (effect.size.fac | subject) + (1 + effect.size.fac | task_name),
data = df %>% filter(!is.na(effect.size.fac)))
summary(introspect.model2)
introspect.model2 <- lmer(introspect_rating ~ effect.size.fac + (effect.size.fac | subject) + (1 + effect.size.fac | task_name),
data = df %>% filter(!is.na(effect.size.fac), task_name %in% new.tasks))
summary(introspect.model2)
ggplot(df %>% filter(!is.na(effect.size)),
aes(x = effect.size.scaled, y = introspect_rating)) +
geom_point(color = 'gray', alpha = .5) +
geom_smooth(method='lm', color = 'white') +
theme_black() +
labs(x = 'Size of factor effect', y = 'Rating of factor influence')
introspect.model2 <- lmer(introspect_rating ~ effect.size.fac + (effect.size.fac | subject) + (1 + effect.size.fac | task_name),
data = df %>% filter(!is.na(effect.size.fac), task_name %in% new.tasks))
summary(introspect.model2)
introspect.model3 <- lmer(introspect_rating ~ effect.size + (1 | subject),
data = df %>% filter(!is.na(effect.size)))
summary(introspect.model3)
introspect.model3 <- lmer(introspect_rating ~ effect.size + (1 | subject) + (1 + effect.size.fac | task_name),
data = df %>% filter(!is.na(effect.size)))
summary(introspect.model3)
introspect.model3 <- lmer(introspect_rating ~ effect.size + (1 | subject) + (1 + effect.size.fac | task_name),
data = df %>% filter(!is.na(effect.size)))
summary(introspect.model3)
introspect.model3 <- lmer(introspect_rating ~ effect.size + (1 | subject),
data = df %>% filter(!is.na(effect.size)))
summary(introspect.model3)
ggplot(df %>% filter(!is.na(effect.size), task_name %in% new.tasks),
aes(x = effect.size.scaled, y = introspect_rating)) +
geom_point(color = 'gray', alpha = .5) +
geom_smooth(method='lm', color = 'white') +
theme_black() +
labs(x = 'Size of factor effect', y = 'Rating of factor influence') +
facet_wrap(~task_name)
introspect.model3 <- lmer(introspect_rating ~ effect.size + (1 | subject),
data = df %>% filter(!is.na(effect.size), task_name %in% new.tasks))
summary(introspect.model3)
introspect.model3 <- lmer(introspect_rating ~ effect.size + (1 | subject),
data = df %>% filter(!is.na(effect.size), task_name %in% new.tasks))
introspect.model3 <- lmer(introspect_rating ~ effect.size + (1 | subject) + (effect.size | task_name),
data = df %>% filter(!is.na(effect.size), task_name %in% new.tasks))
summary(introspect.model3)
introspect.model3 <- lmer(introspect_rating ~ effect.size + (effect.size | subject) + (effect.size | task_name),
data = df %>% filter(!is.na(effect.size), task_name %in% new.tasks))
summary(introspect.model3)
introspect.model3 <- lmer(introspect_rating ~ effect.size + (effect.size | subject) + (1 | task_name),
data = df %>% filter(!is.na(effect.size), task_name %in% new.tasks))
summary(introspect.model3)
length(unique(df$subject))
rm(list=ls())
# Setup -------------------------------------------------------------------
library(extrafont)
require(dplyr)
require(ggplot2)
require(lme4)
require(lmerTest)
require(sjPlot)
require(magrittr)
require(readr)
library(stringr)
library(RColorBrewer)
library(extrafont)
library(Cairo)
library(tidyr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
se = function(x) {return(sd(x, na.rm = T) / sqrt(sum(!is.na(x))))}
se.prop = function(x) {return(sqrt(mean(x, na.rm = T) * (1-mean(x, na.rm = T)) / sum(!is.na(x))))}
dodge <- position_dodge(width=0.9)
data <- read.csv('data.csv') %>%
arrange(subject, task_name) %>%
mutate(total_time = ifelse(grepl("^total_time", introspect_rating), introspect_rating, NA)) %>%
mutate(introspect_rating = ifelse(grepl("^total_time", introspect_rating), NA, introspect_rating)) %>%
mutate(introspect_rating = as.numeric(introspect_rating))
head(data)
data = data %>%
filter(familiarity != "Yes") %>%
mutate(factor = factor(factor, levels = c("Factor-Included", "Factor-Excluded"))) %>%
#find subjects who need to be excluded
attention_exclude <- data %>%
filter((`task_name` == "attention check 2" & `auxiliary_info1` == "Failure") |
(`task_name` == "attention check 3" & `auxiliary_info1` == "Incorrect")) %>%
pull(subject)
# Setup -------------------------------------------------------------------
library(extrafont)
require(dplyr)
require(ggplot2)
require(lme4)
require(lmerTest)
require(sjPlot)
require(magrittr)
require(readr)
library(stringr)
library(RColorBrewer)
library(extrafont)
library(Cairo)
library(tidyr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
se = function(x) {return(sd(x, na.rm = T) / sqrt(sum(!is.na(x))))}
se.prop = function(x) {return(sqrt(mean(x, na.rm = T) * (1-mean(x, na.rm = T)) / sum(!is.na(x))))}
dodge <- position_dodge(width=0.9)
data <- read.csv('data.csv') %>%
arrange(subject, task_name) %>%
mutate(total_time = ifelse(grepl("^total_time", introspect_rating), introspect_rating, NA)) %>%
mutate(introspect_rating = ifelse(grepl("^total_time", introspect_rating), NA, introspect_rating)) %>%
mutate(introspect_rating = as.numeric(introspect_rating))
head(data)
data = data %>%
filter(familiarity != "Yes") %>%
mutate(factor = factor(factor, levels = c("Factor-Included", "Factor-Excluded")))
#find subjects who need to be excluded
attention_exclude <- data %>%
filter((`task_name` == "attention check 2" & `auxiliary_info1` == "Failure") |
(`task_name` == "attention check 3" & `auxiliary_info1` == "Incorrect")) %>%
pull(subject)
events <- read.csv('browser_events.csv') %>%
arrange(subject) %>%
filter(version == "v5_pilot1")
tab_away_exclude <- events %>%
filter(browser_event == "blur") %>%
group_by(subject) %>%
summarize(blurs = n(), more_than_twelve = as.numeric(n() > 12))%>%
filter(more_than_twelve == 1) %>%
pull(subject)
blur_histogram_data <- events %>%
filter(browser_event == "blur") %>%
group_by(subject) %>%
summarize(blurs = n(), more_than_twelve = as.numeric(n() > 12))
##View(attention_exclude)
#blur histogram
ggplot(blur_histogram_data, aes(x = blurs)) +
geom_histogram(binwidth = 1, color = "black") +
labs(title = "Blur Histogram", x = "Number of Blurs", y = "Count") +
theme_custom()
# Setup -------------------------------------------------------------------
library(extrafont)
require(dplyr)
require(ggplot2)
require(lme4)
require(lmerTest)
require(sjPlot)
require(magrittr)
require(readr)
library(stringr)
library(RColorBrewer)
library(extrafont)
library(Cairo)
library(tidyr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
se = function(x) {return(sd(x, na.rm = T) / sqrt(sum(!is.na(x))))}
se.prop = function(x) {return(sqrt(mean(x, na.rm = T) * (1-mean(x, na.rm = T)) / sum(!is.na(x))))}
dodge <- position_dodge(width=0.9)
# color palettes: hot for included, cool for excluded
#Included vs. Excluded
in_and_ex <- c("#F37121", "#4793AF")
in_neutral_ex <- c("#F37121", "#D3D3D3", "#4793AF")
effect_no <- c("#e74c3c", "#D3D3D3")
#In&Effect, In&NoEffect, Ex&Effect, Ex&NoEffect
four_colors <- c("#f1c40f", "#e74c3c","#9b59b6", "#1abc9c")
#In&Effect, In&NoEffect, Ex
three_colors <- c("#f1c40f", "#e74c3c","#4793AF")
#In&Effect, Ex
two_colors <- c("#f1c40f", "#e74c3c")
theme_custom <- function() {
theme_minimal(base_family = "Optima") +
theme(
axis.text.x = element_text(size = 15, margin = margin(t = 0, r = 0, b = 0, l = 1)),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15),
plot.title = element_text(size = 18, face = "bold"),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
strip.text = element_text(size = 15),
aspect.ratio = 1,  # Set the aspect ratio here
panel.grid.major.x = element_blank(),  # Remove major vertical grid lines
panel.grid.minor.x = element_blank()   # Remove minor vertical grid lines
)
}
font_import(pattern = "Optima", prompt = FALSE)
theme_minimal(base_family = "Optima") +
theme(
axis.text.x = element_text(size = 15, margin = margin(t = 0, r = 0, b = 0, l = 1)),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15),
plot.title = element_text(size = 18, face = "bold"),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
strip.text = element_text(size = 15),
aspect.ratio = 1,  # Set the aspect ratio here
panel.grid.major.x = element_blank(),  # Remove major vertical grid lines
panel.grid.minor.x = element_blank()   # Remove minor vertical grid lines
)
theme_custom <- function() {
theme_minimal(base_family = "Optima") +
theme(
axis.text.x = element_text(size = 15, margin = margin(t = 0, r = 0, b = 0, l = 1)),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15),
plot.title = element_text(size = 18, face = "bold"),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
strip.text = element_text(size = 15),
aspect.ratio = 1,  # Set the aspect ratio here
panel.grid.major.x = element_blank(),  # Remove major vertical grid lines
panel.grid.minor.x = element_blank()   # Remove minor vertical grid lines
)
}
#Included vs. Excluded
in_and_ex <- c("#F37121", "#4793AF")
in_neutral_ex <- c("#F37121", "#D3D3D3", "#4793AF")
effect_no <- c("#e74c3c", "#D3D3D3")
#In&Effect, In&NoEffect, Ex&Effect, Ex&NoEffect
four_colors <- c("#f1c40f", "#e74c3c","#9b59b6", "#1abc9c")
#In&Effect, In&NoEffect, Ex
three_colors <- c("#f1c40f", "#e74c3c","#4793AF")
#In&Effect, Ex
two_colors <- c("#f1c40f", "#e74c3c")
theme_custom <- function() {
theme_minimal(base_family = "Optima") +
theme(
axis.text.x = element_text(size = 15, margin = margin(t = 0, r = 0, b = 0, l = 1)),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15),
plot.title = element_text(size = 18, face = "bold"),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
strip.text = element_text(size = 15),
aspect.ratio = 1,  # Set the aspect ratio here
panel.grid.major.x = element_blank(),  # Remove major vertical grid lines
panel.grid.minor.x = element_blank()   # Remove minor vertical grid lines
)
}
data <- read.csv('data.csv') %>%
arrange(subject, task_name) %>%
mutate(total_time = ifelse(grepl("^total_time", introspect_rating), introspect_rating, NA)) %>%
mutate(introspect_rating = ifelse(grepl("^total_time", introspect_rating), NA, introspect_rating)) %>%
mutate(introspect_rating = as.numeric(introspect_rating))
head(data)
data = data %>%
filter(familiarity != "Yes") %>%
mutate(factor = factor(factor, levels = c("Factor-Included", "Factor-Excluded")))
attention_exclude <- data %>%
filter((`task_name` == "attention check 2" & `auxiliary_info1` == "Failure") |
(`task_name` == "attention check 3" & `auxiliary_info1` == "Incorrect")) %>%
pull(subject)
events <- read.csv('browser_events.csv') %>%
arrange(subject) %>%
filter(version == "v5_pilot1")
tab_away_exclude <- events %>%
filter(browser_event == "blur") %>%
group_by(subject) %>%
summarize(blurs = n(), more_than_twelve = as.numeric(n() > 12))%>%
filter(more_than_twelve == 1) %>%
pull(subject)
blur_histogram_data <- events %>%
filter(browser_event == "blur") %>%
group_by(subject) %>%
summarize(blurs = n(), more_than_twelve = as.numeric(n() > 12))
ggplot(blur_histogram_data, aes(x = blurs)) +
geom_histogram(binwidth = 1, color = "black") +
labs(title = "Blur Histogram", x = "Number of Blurs", y = "Count") +
theme_custom()
time_exclude <- data %>%
filter(total_time != "") %>%
mutate(total_time = parse_number(total_time)) %>%
mutate(total_time = total_time/60000)
ggplot(time_exclude, aes(x = total_time)) +
geom_histogram(fill = "skyblue", color = "black") +
labs(title = "Time Histogram", x = "Minutes", y = "Count") +
theme_custom()
to_exclude <- union(attention_exclude, tab_away_exclude)
data <- data %>%
filter(!subject %in% to_exclude)
p.vals = c()
data <- read.csv('data.csv') %>%
arrange(subject, task_name) %>%
mutate(total_time = ifelse(grepl("^total_time", introspect_rating), introspect_rating, NA)) %>%
mutate(introspect_rating = ifelse(grepl("^total_time", introspect_rating), NA, introspect_rating)) %>%
mutate(introspect_rating = as.numeric(introspect_rating))
length(unique(data$subject))
data <- read.csv('data.csv') %>%
arrange(subject, task_name) %>%
mutate(total_time = ifelse(grepl("^total_time", introspect_rating), introspect_rating, NA)) %>%
mutate(introspect_rating = ifelse(grepl("^total_time", introspect_rating), NA, introspect_rating)) %>%
mutate(introspect_rating = as.numeric(introspect_rating))
head(data)
data = data %>%
filter(familiarity != "Yes") %>%
mutate(factor = factor(factor, levels = c("Factor-Included", "Factor-Excluded")))
attention_exclude <- data %>%
filter((`task_name` == "attention check 2" & `auxiliary_info1` == "Failure") |
(`task_name` == "attention check 3" & `auxiliary_info1` == "Incorrect")) %>%
pull(subject)
events <- read.csv('browser_events.csv') %>%
arrange(subject) %>%
filter(version == "v5_pilot1")
tab_away_exclude <- events %>%
filter(browser_event == "blur") %>%
group_by(subject) %>%
summarize(blurs = n(), more_than_twelve = as.numeric(n() > 12))%>%
filter(more_than_twelve == 1) %>%
pull(subject)
blur_histogram_data <- events %>%
filter(browser_event == "blur") %>%
group_by(subject) %>%
summarize(blurs = n(), more_than_twelve = as.numeric(n() > 12))
ggplot(blur_histogram_data, aes(x = blurs)) +
geom_histogram(binwidth = 1, color = "black") +
labs(title = "Blur Histogram", x = "Number of Blurs", y = "Count") +
theme_custom()
time_exclude <- data %>%
filter(total_time != "") %>%
mutate(total_time = parse_number(total_time)) %>%
mutate(total_time = total_time/60000)
ggplot(time_exclude, aes(x = total_time)) +
geom_histogram(fill = "skyblue", color = "black") +
labs(title = "Time Histogram", x = "Minutes", y = "Count") +
theme_custom()
to_exclude <- union(attention_exclude, tab_away_exclude)
data <- data %>%
filter(!subject %in% to_exclude)
p.vals = c()
length(unique(data$subject))
halo_bar_data <- data %>%
filter(task_name == "halo") %>%
mutate(choice = as.numeric(choice))%>%
filter(stimulus != "") %>%
mutate(
condition = case_when(
grepl("img/U", stimulus) ~ "unattractive",
grepl("img/A", stimulus) ~ "attractive",
grepl("img/M", stimulus) ~ "average",
TRUE ~ condition
)
)
summary_halo_data <- halo_bar_data %>%
group_by(condition) %>%
summarize(
mean_choice = mean(choice),
se_choice = se(choice)
)
ggplot(summary_halo_data, aes(x = condition, y = mean_choice, fill = condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_choice - se_choice, ymax = mean_choice + se_choice), width = 0.2) +
labs(title = "Average Persuasiveness by Attractiveness", x = "Condition", y = "Average Choice") +
theme_custom()+
scale_fill_manual(values = in_neutral_ex)+
guides(fill = FALSE)+   scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
summary(lm(choice ~ condition, data = halo_bar_data))
