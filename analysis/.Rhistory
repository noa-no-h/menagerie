LF-247
LF-248
LF-249
LF-250
LF-251
LF-252
LF-253
LF-254
LF-255
LM-200
LM-201
LM-202
LM-203
LM-204
LM-206
LM-207
LM-208
LM-209
LM-210
LM-211
LM-212
LM-213
LM-214
LM-215
LM-216
LM-217
LM-218
LM-219
LM-220
LM-221
LM-222
LM-223
LM-224
LM-225
LM-226
LM-227
LM-228
LM-229
LM-230
LM-231
LM-232
LM-233
LM-234
LM-235
LM-236
LM-237
LM-238
LM-239
LM-240
LM-241
LM-242
LM-243
LM-244
LM-246
LM-247
LM-248
LM-249
LM-250
LM-251
LM-252
LM-253
WF-001
WF-002
WF-003
WF-005
WF-006
WF-007
WF-008
WF-009
WF-010
WF-011
WF-012
WF-013
WF-014
WF-015
WF-016
WF-017
WF-018
WF-019
WF-020
WF-021
WF-022
WF-023
WF-024
WF-025
WF-026
WF-027
WF-028
WF-029
WF-030
WF-031
WF-033
WF-034
WF-035
WF-036
WF-037
WF-038
WF-039
WF-200
WF-201
WF-202
WF-203
WF-204
WF-205
WF-206
WF-207
WF-208
WF-209
WF-210
WF-211
WF-212
WF-213
WF-214
WF-215
WF-216
WF-217
WF-218
WF-219
WF-220
WF-221
WF-222
WF-223
WF-224
WF-225
WF-226
WF-227
WF-228
WF-229
WF-230
WF-231
WF-232
WF-233
WF-234
WF-235
WF-236
WF-237
WF-238
WF-239
WF-240
WF-241
WF-242
WF-243
WF-244
WF-245
WF-246
WF-247
WF-248
WF-249
WF-250
WF-251
WF-252
WM-001
WM-002
WM-003
WM-004
WM-006
WM-009
WM-010
WM-011
WM-012
WM-013
WM-014
WM-015
WM-016
WM-017
WM-018
WM-019
WM-020
WM-021
WM-022
WM-023
WM-024
WM-025
WM-026
WM-028
WM-029
WM-031
WM-032
WM-033
WM-034
WM-035
WM-036
WM-037
WM-038
WM-039
WM-040
WM-041
WM-200
WM-201
WM-202
WM-203
WM-204
WM-205
WM-206
WM-207
WM-208
WM-209
WM-210
WM-211
WM-212
WM-213
WM-214
WM-215
WM-216
WM-217
WM-218
WM-219
WM-220
WM-221
WM-222
WM-223
WM-224
WM-225
WM-227
WM-228
WM-229
WM-230
WM-231
WM-232
WM-233
WM-234
WM-235
WM-236
WM-237
WM-238
WM-239
WM-240
WM-241
WM-242
WM-243
WM-244
WM-245
WM-247
WM-248
WM-249
WM-250
WM-251
WM-252
WM-253
WM-254
WM-255
WM-256
WM-257
WM-258"
csv_list <- gsub("\n", ",", ids)
csv_list
load("/Users/am9578/My Drive/Psychology/Projects/ma_choice_okcupid/git/experiments/real2/analysis_output.rdata")
# for NIH reporting
nrow(df.demo)
prop.table(table(df.demo.filt$race))
table(df.demo$race)
sum(df.demo$race != 'White')
sum(df.demo$race != ['White'])
sum(df.demo$race != '[White]')
df.demo$race
sum(df.demo$race != '[\"White\"]')
sum(grepl("Hispanic", df.demo$race, ignore.case = TRUE))
load("/Users/am9578/My Drive/Psychology/Projects/ma_choice/git3/data-analysis/home-fixed/analysis_output.rdata")
table(df.demo.filt$actual.model.fac)
87+40
60+15+26+9
110 / (110 + 127)
rm(list=ls())
load("/Users/am9578/My Drive/Psychology/Projects/ma_choice/git3/data-analysis/movie/analysis_output.rdata")
table(df.demo.filt$actual.model.fac)
30 / (147 + 30 + 23 + 54)
30 / (147 + 30 + 23 + 5)
# Setup -------------------------------------------------------------------
if (!require('pacman')) {
install.packages('pacman')
require('pacman')
}
pkg.names = c('ggplot2', 'tidyverse', 'lme4', 'lmerTest', 'extrafont', 'RColorBrewer',
'this.path', 'brms', 'extrafont', 'bayestestR')
p_load(char = pkg.names)
setwd(here())
# color palettes: hot for included, cool for excluded
#Included vs. Excluded
in_and_ex <- c("#F37121", "#4793AF")
in_neutral_ex <- c("#F37121", "#D3D3D3", "#4793AF")
effect_no <- c("#e74c3c", "#D3D3D3")
#In&Effect, In&NoEffect, Ex&Effect, Ex&NoEffect
four_colors <- c("#f1c40f", "#e74c3c","#9b59b6", "#1abc9c")
#In&Effect, In&NoEffect, Ex
three_colors <- c("#f1c40f", "#e74c3c","#4793AF")
#In&Effect, Ex
two_colors <- c("#f1c40f", "#e74c3c")
theme_custom <- function() {
theme_minimal(base_family = "Optima") +
theme(
axis.text.x = element_text(size = 15, margin = margin(t = 0, r = 0, b = 0, l = 1)),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15),
plot.title = element_text(size = 18, face = "bold"),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
strip.text = element_text(size = 15),
aspect.ratio = 1,  # Set the aspect ratio here
panel.grid.major.x = element_blank(),  # Remove major vertical grid lines
panel.grid.minor.x = element_blank()   # Remove minor vertical grid lines
)
}
se = function(x) {return(sd(x, na.rm = T) / sqrt(sum(!is.na(x))))}
se.prop = function(x) {return(sqrt(mean(x, na.rm = T) * (1-mean(x, na.rm = T)) / sum(!is.na(x))))}
dodge <- position_dodge(width=0.9)
load("/Users/am9578/My Drive/Psychology/Projects/menagerie/noa_git/menagerie/analysis/novemberAnalysis_AM_output.rdata")
sunk_cost_data <- data %>%
filter(task_name == "sunk_cost effect") %>%
mutate(switched = choice == 'Solar-powered Pump',
switched.num = as.numeric(switched))
sunk_cost_data <- data %>%
filter(task_name == "sunk_cost effect") %>%
mutate(switched = choice == 'Solar-powered Pump',
switched.num = as.numeric(switched),
condition = factor(condition, levels = c("Sunk Cost", "No Sunk Cost")))
percentage_sunk_cost_data <- sunk_cost_data %>%
group_by(condition) %>%
summarize(mean_switched = mean(switched),
se_switched = se.prop(switched))
percentage_sunk_cost_data
summary(glm(switched ~ condition, data = sunk_cost_data, family = 'binomial'))
ggplot(percentage_sunk_cost_data, aes(x = condition, y = mean_switched, fill = condition)) +
geom_bar(stat = "identity") +
labs(title = "Percentage Switching Projects by Condition", x = "Condition", y = "Percentage of Choices to Switch") +
geom_text(aes(label = paste0("n=", total_in_condition)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+   scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
ggplot(percentage_sunk_cost_data, aes(x = condition, y = mean_switched, fill = condition)) +
geom_bar(stat = "identity") +
labs(title = "Percentage Switching Projects by Condition", x = "Condition", y = "Percentage of Choices to Switch") +
geom_text(aes(label = paste0("n=", total_in_condition)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+   scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
ggplot(percentage_sunk_cost_data, aes(x = condition, y = mean_switched, fill = condition)) +
geom_bar(stat = "identity") +
labs(title = "Percentage Switching Projects by Condition", x = "Condition", y = "Percentage of Choices to Switch") +
geom_text(aes(label = paste0("n=", total)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+   scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
percentage_sunk_cost_data <- sunk_cost_data %>%
group_by(condition) %>%
summarize(mean_switched = mean(switched),
se_switched = se.prop(switched),
total = n())
ggplot(percentage_sunk_cost_data, aes(x = condition, y = mean_switched, fill = condition)) +
geom_bar(stat = "identity") +
labs(title = "Percentage Switching Projects by Condition", x = "Condition", y = "Percentage of Choices to Switch") +
geom_text(aes(label = paste0("n=", total)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+   scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
ggplot(percentage_sunk_cost_data, aes(x = condition, y = mean_switched, fill = condition)) +
geom_bar(stat = "identity") +
geom_errorbar(
aes(ymin = mean_switched - se_switched,
ymax = mean_switched + se_switched),
width = 0.2
) +
labs(title = "Percentage Switching Projects by Condition", x = "Condition", y = "Percentage of Choices to Switch") +
geom_text(aes(label = paste0("n=", total)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+   scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
sunkcost_effect_analysis = brm(switched ~ condition,
data = sunkcost_effect_analysis)
sunkcost_effect_analysis = brm(switched ~ condition,
data = sunk_cost_data)
sunkcost_effect_analysis = brm(switched ~ condition,
data = sunk_cost_data,
family = 'binomial')
sunkcost_effect_analysis = brm(switched.num ~ condition,
data = sunk_cost_data,
family = 'binomial')
sunk_cost_data$switched.num
sunkcost_effect_analysis = brm(switched.num ~ condition,
data = sunk_cost_data,
family = binomial())
str(sunk_cost_data)
sunkcost_effect_analysis = brm(switched.num ~ condition,
data = sunk_cost_data,
family = 'bernoulli')
summary(sunkcost_effect_analysis)
hdi(sunkcost_effect_analysis, effects = 'all')
sunk_cost_data_introspection = sunk_cost_data %>%
filter(stimulus == "")
summary_sunk_cost_data_introspection <- sunk_cost_data_introspection %>%
group_by(factor) %>%
summarize(
mean_introspect_rating = mean(as.numeric(introspect_rating), na.rm = TRUE),
se_introspect_rating = se(introspect_rating)
)
summary_sunk_cost_data_introspection
ggplot(summary_sunk_cost_data_introspection, aes(x = factor, y = mean_introspect_rating, fill = factor)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "Halo Introspection ratings", x = "Condition", y = "introspection rating") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+
scale_x_discrete(labels = function(x) str_wrap(x, width = 14))+
scale_y_continuous(limits = c(0, 100))
ggplot(summary_sunk_cost_data_introspection, aes(x = factor, y = mean_introspect_rating, fill = factor)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "Sunk Cost Introspection ratings", x = "Condition", y = "introspection rating") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+
scale_x_discrete(labels = function(x) str_wrap(x, width = 14))+
scale_y_continuous(limits = c(0, 100))
summary_sunk_cost_data_introspection = brm(introspect_rating ~ factor,
data = sunk_cost_data_introspection)
sunk_cost_data_introspection_analysis = brm(introspect_rating ~ factor,
data = sunk_cost_data_introspection)
summary(sunk_cost_data_introspection_analysis)
hdi(sunk_cost_data_introspection_analysis, effects = 'all')
sunk_cost_data
View(sunk_cost_data)
View(sunk_cost_data)
View(sunk_cost_data)
# Looking at individual effect size
sunk_cost_data = sunk_cost_data %>%
mutate(effect_size = ifelse(condition == 'Sunk Cost', !switched, switched))
View(sunk_cost_data)
# Looking at individual effect size
sunk_cost_data = sunk_cost_data %>%
mutate(effect_size = ifelse(condition == 'Sunk Cost', !switched, switched),
effect_size = as.numeric(effect_size))
?left_join
sunk_cost_data_introspection = sunk_cost_data_introspection %>%
left_join(sunk_cost_data %>% select(subject, effect_size), by = 'subject') %>%
mutate(showed_effect = factor(ifelse(ifelse(effect_size > 0, 'Showed effect', 'No effect'))))
View(sunk_cost_data_introspection)
sunk_cost_data_introspection = sunk_cost_data_introspection %>%
left_join(sunk_cost_data %>% select(subject, effect_size), by = 'subject') %>%
mutate(showed_effect = factor(ifelse(effect_size > 0, 'Showed effect', 'No effect')))
sunk_cost_data_introspection = sunk_cost_data %>%
filter(stimulus == "")
summary_sunk_cost_data_introspection <- sunk_cost_data_introspection %>%
group_by(factor) %>%
summarize(
mean_introspect_rating = mean(as.numeric(introspect_rating), na.rm = TRUE),
se_introspect_rating = se(introspect_rating)
)
ggplot(summary_sunk_cost_data_introspection, aes(x = factor, y = mean_introspect_rating, fill = factor)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "Sunk Cost Introspection ratings", x = "Condition", y = "introspection rating") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+
scale_x_discrete(labels = function(x) str_wrap(x, width = 14))+
scale_y_continuous(limits = c(0, 100))
sunk_cost_data_introspection_analysis = brm(introspect_rating ~ factor,
data = sunk_cost_data_introspection)
# Looking at individual effect size
sunk_cost_data = sunk_cost_data %>%
mutate(effect_size = ifelse(condition == 'Sunk Cost', !switched, switched),
effect_size = as.numeric(effect_size))
# Looking at individual effect size
sunk_cost_data = sunk_cost_data %>%
mutate(effect_size = ifelse(condition == 'Sunk Cost', !switched, switched),
effect_size = as.numeric(effect_size))
sunk_cost_data_introspection = sunk_cost_data_introspection %>%
left_join(sunk_cost_data %>% select(subject, effect_size), by = 'subject') %>%
mutate(showed_effect = factor(ifelse(effect_size > 0, 'Showed effect', 'No effect')))
sunk_cost_data_introspection$effect_size
sunk_cost_data_introspection$effect_size
sunk_cost_data_introspection = sunk_cost_data_introspection %>%
mutate(showed_effect = factor(ifelse(effect_size > 0, 'Showed effect', 'No effect')))
sunk_cost_data_introspection_summary = sunk_cost_data_introspection %>%
#filter(factor == 'Factor-Included') %>%
group_by(showed_effect) %>%
summarize(mean_introspect_rating = mean(introspect_rating, na.rm = T),
se_introspect_rating = se(introspect_rating),
)
sunk_cost_data_introspection_summary
sunk_cost_data_introspection_summary = sunk_cost_data_introspection %>%
filter(factor == 'Factor-Included') %>%
group_by(showed_effect) %>%
summarize(mean_introspect_rating = mean(introspect_rating, na.rm = T),
se_introspect_rating = se(introspect_rating),
)
ggplot(halo_data_introspection_summary,
aes(x = showed_effect, y = mean_introspect_rating)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "Halo Introspection ratings", x = "Showed effect?", y = "Introspection rating") +
theme_custom()
sunk_cost_data_introspection_summary
ggplot(sunk_cost_data_introspection_summary,
aes(x = showed_effect, y = mean_introspect_rating)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "Halo Introspection ratings", x = "Showed effect?", y = "Introspection rating") +
theme_custom()
save.image('novemberAnalysis_AM_output.rdata')
rm(list=ls())
