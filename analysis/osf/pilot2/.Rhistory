)
ggplot(reference_summary, aes(x = condition, y = mean_choice, fill = condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_choice - se_choice, ymax = mean_choice + se_choice), width = 0.2) +
labs(title = "Amount Willing to Pay for Beer", x = "Condition", y = "Average Amount Willing to Pay (Dollars)") +
geom_text(aes(label = paste0("n=", count)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = "none")+
scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
reference_analysis = brm(choice_parsed ~ condition,
reference_data,
save_pars = save_pars(group = F))
summary(reference_analysis)
hdi(reference_analysis)
##14.2 are people aware of the effect?----
reference_data_introspection = reference_data
# in experience condition
reference_median = mean(reference_data$choice_parsed[reference_data$factor == 'prediction'])
reference_data_introspection_experience = reference_data_introspection %>%
filter(factor == 'experience') %>%
mutate(effect_size = choice_parsed,
effect_size_std = scale(effect_size), effect_size_range = range01(effect_size),
showed_effect = factor(choice_parsed > reference_median, c(T,F), c('Effect', 'No effect')))
# dichotomized
reference_summary_introspection_experience <- reference_data_introspection_experience %>%
group_by(showed_effect) %>%
summarize(
mean_introspect_rating = mean(as.numeric(introspect_rating), na.rm = TRUE),
se_introspect_rating = se(introspect_rating)
)
ggplot(reference_summary_introspection_experience, aes(x = showed_effect, y = mean_introspect_rating, fill = showed_effect)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "reference introspection ratings", x = "Showed effect", y = "introspection rating") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+
scale_x_discrete(labels = function(x) str_wrap(x, width = 14))+
scale_y_continuous(limits = c(0, 100))
reference_analysis_introspection_experience_midpoint = brm(introspect_rating ~ 1,
reference_data_introspection_experience %>% filter(showed_effect == 'Effect'),
save_pars = save_pars(group = F))
summary(reference_analysis_introspection_experience_midpoint)
hdi(reference_analysis_introspection_experience_midpoint)
reference_analysis_introspection_experience_dichotomized = brm(introspect_rating ~ showed_effect,
reference_data_introspection_experience,
save_pars = save_pars(group = F))
summary(reference_analysis_introspection_experience_dichotomized)
hdi(reference_analysis_introspection_experience_dichotomized)
# continuous
ggplot(reference_data_introspection_experience, aes(x = effect_size, y = introspect_rating)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_custom() +
labs(x = 'Choice', y = 'Influence rating')
reference_analysis_introspection_experience_continuous = brm(introspect_rating ~ effect_size,
reference_data_introspection_experience,
save_pars = save_pars(group = F))
summary(reference_analysis_introspection_experience_continuous)
hdi(reference_analysis_introspection_experience_continuous)
# across conditions
reference_summary_introspection_both <- reference_data %>%
group_by(condition) %>%
summarize(
mean_introspect_rating = mean(introspect_rating),
se_introspect_rating = se(introspect_rating)
)
ggplot(reference_summary_introspection_both, aes(x = condition, y = mean_introspect_rating, fill = condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "Reference Price Introspection ratings", x = "Condition", y = "introspection rating") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = "none")+
scale_x_discrete(labels = function(x) str_wrap(x, width = 14))+
scale_y_continuous(limits = c(-50, 50))
reference_analysis_introspection_both = brm(introspect_rating ~ condition,
reference_data,
save_pars = save_pars(group = F))
summary(reference_analysis_introspection_both)
hdi(reference_analysis_introspection_both)
#15 Representativeness ----
##15.1 do we see the effect? ----
representativeness_data <- data %>%
filter(task_name == "rep") %>%
mutate(choice = as.numeric(choice))
representativeness_summary <- representativeness_data %>%
group_by(condition) %>%
mutate(condition = factor(condition, levels = c("experience", "prediction"))) %>%
summarize(
mean_choice = mean(choice),
se_choice = se(choice),
count = n()
)
ggplot(representativeness_summary, aes(x = condition, y = mean_choice, fill = condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_choice - se_choice, ymax = mean_choice + se_choice), width = 0.2) +
labs(title = "Is Jack an Engineer?", x = "Condition", y = "average likelihood of engineer") +
geom_text(aes(label = paste0("n=", count)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
theme_custom() +
scale_fill_manual(values = in_and_ex)+
guides(fill = "none")+
scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
representativeness_analysis = brm(choice ~ condition,
representativeness_data,
save_pars = save_pars(group = F))
summary(representativeness_analysis)
hdi(representativeness_analysis)
##15.2 are people aware of the effect? -----------------------------------------
representativeness_data_introspection = representativeness_data
# in experience condition
representativeness_median = mean(representativeness_data$choice[representativeness_data$factor == 'prediction'])
representativeness_data_introspection_experience = representativeness_data_introspection %>%
filter(factor == 'experience') %>%
mutate(effect_size = choice,
effect_size_std = scale(effect_size), effect_size_range = range01(effect_size),
showed_effect = factor(choice > representativeness_median, c(T,F), c('Effect', 'No effect')))
# dichotomized
representativeness_summary_introspection_experience <- representativeness_data_introspection_experience %>%
group_by(showed_effect) %>%
summarize(
mean_introspect_rating = mean(as.numeric(introspect_rating), na.rm = TRUE),
se_introspect_rating = se(introspect_rating)
)
ggplot(representativeness_summary_introspection_experience, aes(x = showed_effect, y = mean_introspect_rating, fill = showed_effect)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "representativeness introspection ratings", x = "Showed effect", y = "introspection rating") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+
scale_x_discrete(labels = function(x) str_wrap(x, width = 14))+
scale_y_continuous(limits = c(0, 100))
representativeness_analysis_introspection_experience_midpoint = brm(introspect_rating ~ 1,
representativeness_data_introspection_experience %>% filter(showed_effect == 'Effect'),
save_pars = save_pars(group = F))
summary(representativeness_analysis_introspection_experience_midpoint)
hdi(representativeness_analysis_introspection_experience_midpoint)
representativeness_analysis_introspection_experience_dichotomized = brm(introspect_rating ~ showed_effect,
representativeness_data_introspection_experience,
save_pars = save_pars(group = F))
summary(representativeness_analysis_introspection_experience_dichotomized)
hdi(representativeness_analysis_introspection_experience_dichotomized)
# continuous
ggplot(representativeness_data_introspection_experience, aes(x = effect_size, y = introspect_rating)) +
geom_point() +
geom_smooth(method = 'lm') +
theme_custom() +
labs(x = 'Choice', y = 'Influence rating')
representativeness_analysis_introspection_experience_continuous = brm(introspect_rating ~ effect_size,
representativeness_data_introspection_experience,
save_pars = save_pars(group = F))
summary(representativeness_analysis_introspection_experience_continuous)
hdi(representativeness_analysis_introspection_experience_continuous)
# across conditions
representativeness_summary_introspection_both <- representativeness_data_introspection %>%
group_by(condition) %>%
summarize(
mean_introspect_rating = mean(introspect_rating),
se_introspect_rating = se(introspect_rating)
)
ggplot(representativeness_summary_introspection_both, aes(x = condition, y = mean_introspect_rating, fill = condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "representativeness Price Introspection ratings", x = "Condition", y = "introspection rating") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = "none")+
scale_x_discrete(labels = function(x) str_wrap(x, width = 14))+   scale_y_continuous(limits = c(0, 100))
representativeness_analysis_introspection_both = brm(introspect_rating ~ condition,
representativeness_data,
save_pars = save_pars(group = F))
summary(representativeness_analysis_introspection_both)
hdi(representativeness_analysis_introspection_both)
#16 status quo ----
##16.1 do we see the effect? ----
statusquo_data <- data %>%
filter(task_name == "status_quo") %>%
mutate(choice_binary = as.numeric(choice == "70/30"))%>%
mutate(condition = factor(condition, levels = c("experience", "prediction")))
statusquo_summary <- statusquo_data %>%
group_by(condition) %>%
summarize(
mean_choice = mean(choice_binary),
se_choice = se.prop(choice_binary),
count = n()
)
ggplot(statusquo_summary, aes(x = condition, y = mean_choice, fill = condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_choice - se_choice,
ymax = mean_choice + se_choice),
width = 0.2)+
labs(title = "Choices to continue the status quo", x = "Condition", y = "Percent subjects who recommended the status quo") +
geom_text(aes(label = paste0("n=", count)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
theme_custom() +
scale_fill_manual(values = in_and_ex)+
guides(fill = "none")+
scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
statusquo_analysis = brm(choice_binary ~ condition,
data = statusquo_data,
family = 'bernoulli',
save_pars = save_pars(group = F))
statusquo_data
statusquo_analysis = brm(choice_binary ~ condition,
data = statusquo_data,
family = 'bernoulli',
save_pars = save_pars(group = F))
statusquo_data
statusquo_data$condition
statusquo_data <- data %>%
filter(task_name == "status_quo") %>%
mutate(choice_binary = as.numeric(choice == "70/30"))%>%
mutate(condition = factor(condition, labels = c("experience", "prediction")))
statusquo_summary <- statusquo_data %>%
group_by(condition) %>%
summarize(
mean_choice = mean(choice_binary),
se_choice = se.prop(choice_binary),
count = n()
)
ggplot(statusquo_summary, aes(x = condition, y = mean_choice, fill = condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_choice - se_choice,
ymax = mean_choice + se_choice),
width = 0.2)+
labs(title = "Choices to continue the status quo", x = "Condition", y = "Percent subjects who recommended the status quo") +
geom_text(aes(label = paste0("n=", count)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
theme_custom() +
scale_fill_manual(values = in_and_ex)+
guides(fill = "none")+
scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
statusquo_analysis = brm(choice_binary ~ condition,
data = statusquo_data,
family = 'bernoulli',
save_pars = save_pars(group = F))
summary(statusquo_analysis)
hdi(statusquo_analysis)
##16.2 are people aware of the effect? ----
statusquo_data_introspection = statusquo_data
## in experience condition
statusquo_data_introspection_experience = statusquo_data_introspection %>%
filter(factor == 'experience') %>%
mutate(effect_size = choice_binary,
effect_size_std = scale(effect_size), effect_size_range = range01(effect_size),
showed_effect = factor(choice_binary, c(1,0), c('Effect', 'No effect')))
# dichotomized
statusquo_summary_introspection_experience <- statusquo_data_introspection_experience %>%
group_by(showed_effect) %>%
summarize(
mean_introspect_rating = mean(as.numeric(introspect_rating), na.rm = TRUE),
se_introspect_rating = se(introspect_rating)
)
ggplot(statusquo_summary_introspection_experience, aes(x = showed_effect, y = mean_introspect_rating, fill = showed_effect)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "statusquo introspection ratings", x = "Showed effect", y = "introspection rating") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+
scale_x_discrete(labels = function(x) str_wrap(x, width = 14))+
scale_y_continuous(limits = c(-50, 50))
statusquo_analysis_introspection_experience_midpoint = brm(introspect_rating ~ 1,
statusquo_data_introspection_experience %>% filter(showed_effect == 'Effect'),
save_pars = save_pars(group = F))
summary(statusquo_analysis_introspection_experience_midpoint)
hdi(statusquo_analysis_introspection_experience_midpoint)
statusquo_analysis_introspection_experience_dichotomized = brm(introspect_rating ~ showed_effect,
statusquo_data_introspection_experience,
save_pars = save_pars(group = F))
summary(statusquo_analysis_introspection_experience_dichotomized)
hdi(statusquo_analysis_introspection_experience_dichotomized)
## across conditions
statusquo_summary_introspection_both <- statusquo_data %>%
mutate(condition = factor(condition, levels = c("experience", "prediction"))) %>%
group_by(condition) %>%
summarize(
mean_introspect_rating = mean(introspect_rating), # check this
se_introspect_rating = se(introspect_rating)
)
ggplot(statusquo_summary_introspection_both, aes(x = condition, y = mean_introspect_rating, fill = condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "Status Quo Introspection Ratings", x = "Condition", y = "Introspection rating") +
theme_custom() +
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+
scale_x_discrete(labels = function(x) str_wrap(x, width = 14))+
scale_y_continuous(limits = c(-50, 50))
statusquo_analysis_introspection_both = brm(introspect_rating ~ condition,
statusquo_data,
save_pars = save_pars(group = F))
summary(statusquo_analysis_introspection_both)
hdi(statusquo_analysis_introspection_both)
#17 sunk cost ----
##17.1 do we see the effect? ----
sunkcost_data <- data %>%
filter(task_name == "sunk_cost effect") %>%
mutate(switched = choice == 'Solar-powered Pump',
switched.num = as.numeric(switched),
condition = factor(condition, levels = c("Sunk Cost", "No Sunk Cost")))
sunkcost_summary <- sunkcost_data %>%
group_by(condition) %>%
summarize(mean_switched = mean(switched),
se_switched = se.prop(switched),
total = n())
ggplot(sunkcost_summary, aes(x = condition, y = mean_switched, fill = condition)) +
geom_bar(stat = "identity") +
geom_errorbar(
aes(ymin = mean_switched - se_switched,
ymax = mean_switched + se_switched),
width = 0.2
) +
labs(title = "Percentage Switching Projects by Condition", x = "Condition", y = "Percentage of Choices to Switch") +
geom_text(aes(label = paste0("n=", total)),
position = position_dodge(0.9), vjust = -0.5,
family = "Optima") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = "none")+
scale_x_discrete(labels = function(x) str_wrap(x, width = 14))
sunkcost_analysis = brm(switched.num ~ condition,
data = sunkcost_data,
family = 'bernoulli',
save_pars = save_pars(group = F))
summary(sunkcost_analysis)
hdi(sunkcost_analysis, effects = 'all')
##17.2 are people aware of the effect? -----------------------------------------
sunkcost_data_introspection = sunkcost_data
## in experience condition
sunkcost_data_introspection_experience = sunkcost_data_introspection %>%
filter(factor == 'experience') %>%
mutate(effect_size = !switched,
effect_size_std = scale(effect_size), effect_size_range = range01(effect_size),
showed_effect = factor(!switched, c(T,F), c('Effect', 'No effect')))
# dichotomized
sunkcost_summary_introspection_experience <- sunkcost_data_introspection_experience %>%
group_by(showed_effect) %>%
summarize(
mean_introspect_rating = mean(as.numeric(introspect_rating), na.rm = TRUE),
se_introspect_rating = se(introspect_rating)
)
ggplot(sunkcost_summary_introspection_experience, aes(x = showed_effect, y = mean_introspect_rating, fill = showed_effect)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "sunkcost introspection ratings", x = "Showed effect", y = "introspection rating") +
theme_custom()+
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+
scale_x_discrete(labels = function(x) str_wrap(x, width = 14))+
scale_y_continuous(limits = c(0, 100))
sunkcost_analysis_introspection_experience_midpoint = brm(introspect_rating ~ 1,
sunkcost_data_introspection_experience %>% filter(showed_effect == 'Effect'),
save_pars = save_pars(group = F))
summary(sunkcost_analysis_introspection_experience_midpoint)
hdi(sunkcost_analysis_introspection_experience_midpoint)
sunkcost_analysis_introspection_experience_dichotomized = brm(introspect_rating ~ showed_effect,
sunkcost_data_introspection_experience,
save_pars = save_pars(group = F))
summary(sunkcost_analysis_introspection_experience_dichotomized)
hdi(sunkcost_analysis_introspection_experience_dichotomized)
## across conditions
sunkcost_summary_introspection_both <- sunkcost_data_introspection %>%
mutate(condition = factor(factor, levels = c("experience", "prediction"))) %>%
group_by(condition) %>%
summarize(
mean_introspect_rating = mean(introspect_rating), # check this
se_introspect_rating = se(introspect_rating)
)
ggplot(sunkcost_summary_introspection_both, aes(x = condition, y = mean_introspect_rating, fill = condition)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "Sunk Cost Introspection Ratings", x = "Condition", y = "Introspection rating") +
theme_custom() +
scale_fill_manual(values = in_and_ex)+
guides(fill = FALSE)+
scale_x_discrete(labels = function(x) str_wrap(x, width = 14))+
scale_y_continuous(limits = c(-50, 50))
sunkcost_analysis_introspection_both = brm(introspect_rating ~ condition,
sunkcost_data,
save_pars = save_pars(group = F))
summary(sunkcost_analysis_introspection_both)
hdi(sunkcost_analysis_introspection_both)
# all tasks ---------------------------------------------------------------
## in experience condition
all_list_introspection_experience = list(halo_data_introspection_experience,
illusory_data_introspection_experience,
omission_data_introspection_experience,
recognition_data_introspection_experience,
reference_data_introspection_experience,
representativeness_data_introspection_experience,
sunkcost_data_introspection_experience)
all_data_introspection_experience = all_list_introspection_experience[[1]] %>%
select(subject, task_name, introspect_rating, effect_size, effect_size_std, effect_size_range, showed_effect)
for (i in 2:length(all_list_introspection_experience)) {
all_data_introspection_experience = all_data_introspection_experience %>%
rbind(all_list_introspection_experience[[i]] %>%
select(subject, task_name, introspect_rating, effect_size, effect_size_std, effect_size_range, showed_effect))
}
# dichotomous
all_summary_introspection_experience = all_data_introspection_experience %>%
group_by(showed_effect) %>%
summarize(mean_introspect_rating = mean(introspect_rating),
se_introspect_rating = se(introspect_rating))
ggplot(all_summary_introspection_experience,
aes(x = showed_effect, y = mean_introspect_rating, fill = showed_effect)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "", x = "Showed effect?", y = "Influence rating") +
theme_custom() +
scale_fill_manual(values = effect_no) +
guides(fill = "none")
all_analysis_introspection_experience_midpoint = brm(introspect_rating ~ 1 + (1 | subject) + (1 | task_name),
all_data_introspection_experience %>% filter(showed_effect == 'Effect'),
save_pars = save_pars(group = F))
summary(all_analysis_introspection_experience_midpoint)
hdi(all_analysis_introspection_experience_midpoint)
all_analysis_introspection_experience_dichotomous = brm(introspect_rating ~ showed_effect + (showed_effect | subject) + (showed_effect | task_name),
all_data_introspection_experience,
save_pars = save_pars(group = F))
summary(all_analysis_introspection_experience_dichotomous)
hdi(all_analysis_introspection_experience_dichotomous)
# continuous
ggplot(all_data_introspection_experience,
aes(x = effect_size_std, y = introspect_rating)) +
geom_point(alpha=0.8) +
geom_smooth(method='lm') +
theme_custom()
all_analysis_introspection_experience_continuous_std = brm(introspect_rating ~ effect_size_std + (effect_size_std | subject) + (1 | task_name),
all_data_introspection_experience,
save_pars = save_pars(group = F))
summary(all_analysis_introspection_experience_continuous_std)
hdi(all_analysis_introspection_experience_continuous_std)
ggplot(all_data_introspection_experience,
aes(x = effect_size_range, y = introspect_rating)) +
geom_point(alpha=0.8) +
geom_smooth(method='lm') +
theme_custom()
all_analysis_introspection_experience_continuous_range = brm(introspect_rating ~ effect_size_range + (effect_size_range | subject) + (1 | task_name),
all_data_introspection_experience,
save_pars = save_pars(group = F))
summary(all_analysis_introspection_experience_continuous_range)
hdi(all_analysis_introspection_experience_continuous_range)
all_data_introspection_experience = all_data_introspection_experience %>%
group_by(subject) %>%
mutate(effect_size_std_within = scale(effect_size_std),
effect_size_range_within = scale(effect_size_range),
introspect_rating_within = scale(introspect_rating)) %>%
ungroup()
ggplot(all_data_introspection_experience,
aes(x = effect_size_range_within, y = introspect_rating_within)) +
geom_point(alpha=0.8) +
geom_smooth(method='lm') +
theme_custom()
## across conditions
all_list_introspection_both = list(halo_data_introspection,
illusory_data_introspection,
omission_data_introspection,
recognition_data_introspection,
reference_data_introspection,
representativeness_data_introspection,
sunkcost_data_introspection)
all_data_introspection_both = all_list_introspection_both[[1]] %>%
select(subject, task_name, factor, introspect_rating)
for (i in 2:length(all_list_introspection_both)) {
all_data_introspection_both = all_data_introspection_both %>%
rbind(all_list_introspection_both[[i]] %>%
select(subject, task_name, factor, introspect_rating))
}
all_summary_introspection_both = all_data_introspection_both %>%
group_by(factor) %>%
summarize(mean_introspect_rating = mean(introspect_rating),
se_introspect_rating = se(introspect_rating))
ggplot(all_summary_introspection_both, aes(x = factor, y = mean_introspect_rating, fill = factor)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "", x = "Condition", y = "Influence rating") +
theme_custom() +
scale_fill_manual(values = in_and_ex)+
guides(fill = "none")+
scale_x_discrete(labels = function(x) str_wrap(x, width = 14))+
scale_y_continuous(limits = c(-50, 50))
all_analysis_introspection_both = brm(introspect_rating ~ factor + (1 | subject) + (factor | task_name),
all_data_introspection_both,
save_pars = save_pars(group = F))
summary(all_analysis_introspection_both)
hdi(all_analysis_introspection_both)
all_bytask_introspection_both = all_data_introspection_both %>%
group_by(task_name, factor) %>%
summarize(mean_introspect_rating = mean(introspect_rating),
se_introspect_rating = se(introspect_rating))
ggplot(all_bytask_introspection_both, aes(x = task_name, y = mean_introspect_rating, color = factor)) +
geom_point(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "", x = "Condition", y = "Influence rating") +
theme_custom() +
scale_fill_manual(values = in_and_ex)+
guides(fill = "none")+
scale_x_discrete(labels = function(x) str_wrap(x, width = 14))+
scale_y_continuous(limits = c(0, 100))+
theme(axis.text.x = element_text(angle = 45, vjust = 0.7))
# Save image --------------------------------------------------------------
save.image('pilot2_output.rdata')
rm(list=ls())
