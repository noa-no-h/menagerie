WF-200
WF-201
WF-202
WF-203
WF-204
WF-205
WF-206
WF-207
WF-208
WF-209
WF-210
WF-211
WF-212
WF-213
WF-214
WF-215
WF-216
WF-217
WF-218
WF-219
WF-220
WF-221
WF-222
WF-223
WF-224
WF-225
WF-226
WF-227
WF-228
WF-229
WF-230
WF-231
WF-232
WF-233
WF-234
WF-235
WF-236
WF-237
WF-238
WF-239
WF-240
WF-241
WF-242
WF-243
WF-244
WF-245
WF-246
WF-247
WF-248
WF-249
WF-250
WF-251
WF-252
WM-001
WM-002
WM-003
WM-004
WM-006
WM-009
WM-010
WM-011
WM-012
WM-013
WM-014
WM-015
WM-016
WM-017
WM-018
WM-019
WM-020
WM-021
WM-022
WM-023
WM-024
WM-025
WM-026
WM-028
WM-029
WM-031
WM-032
WM-033
WM-034
WM-035
WM-036
WM-037
WM-038
WM-039
WM-040
WM-041
WM-200
WM-201
WM-202
WM-203
WM-204
WM-205
WM-206
WM-207
WM-208
WM-209
WM-210
WM-211
WM-212
WM-213
WM-214
WM-215
WM-216
WM-217
WM-218
WM-219
WM-220
WM-221
WM-222
WM-223
WM-224
WM-225
WM-227
WM-228
WM-229
WM-230
WM-231
WM-232
WM-233
WM-234
WM-235
WM-236
WM-237
WM-238
WM-239
WM-240
WM-241
WM-242
WM-243
WM-244
WM-245
WM-247
WM-248
WM-249
WM-250
WM-251
WM-252
WM-253
WM-254
WM-255
WM-256
WM-257
WM-258"
csv_list <- gsub("\n", ",", ids)
csv_list
load("/Users/am9578/My Drive/Psychology/Projects/ma_choice_okcupid/git/experiments/real2/analysis_output.rdata")
# for NIH reporting
nrow(df.demo)
prop.table(table(df.demo.filt$race))
table(df.demo$race)
sum(df.demo$race != 'White')
sum(df.demo$race != ['White'])
sum(df.demo$race != '[White]')
df.demo$race
sum(df.demo$race != '[\"White\"]')
sum(grepl("Hispanic", df.demo$race, ignore.case = TRUE))
load("/Users/am9578/My Drive/Psychology/Projects/ma_choice/git3/data-analysis/home-fixed/analysis_output.rdata")
table(df.demo.filt$actual.model.fac)
87+40
60+15+26+9
110 / (110 + 127)
rm(list=ls())
load("/Users/am9578/My Drive/Psychology/Projects/ma_choice/git3/data-analysis/movie/analysis_output.rdata")
table(df.demo.filt$actual.model.fac)
30 / (147 + 30 + 23 + 54)
30 / (147 + 30 + 23 + 5)
load("/Users/am9578/My Drive/Psychology/Projects/ma_choice/git3_pristine_osf/data-analysis/expert-prediction/analysis_output.rdata")
nrow(df)
table(df$Role.fac)
df$Role.fac
df[66]
df[66,]
# Load necessary library
set.seed(42)  # For reproducibility
# Simulate data for 100 choices
data <- data.frame(
choice_id = 1:100,
# Calendar A attributes
width_A = runif(100, 8, 24),
height_A = runif(100, 10, 36),
writing_space_size_A = runif(100, 2, 16),
number_of_images_A = sample(12:24, 100, replace = TRUE),
paper_thickness_A = runif(100, 100, 250),
# Calendar B attributes
width_B = runif(100, 8, 24),
height_B = runif(100, 10, 36),
writing_space_size_B = runif(100, 2, 16),
number_of_images_B = sample(12:24, 100, replace = TRUE),
paper_thickness_B = runif(100, 100, 250),
# Simulated choice outcome: 1 if Calendar A is chosen, 0 if Calendar B is chosen
choice = sample(0:1, 100, replace = TRUE)
)
# View the first few rows of the simulated data
head(data)
data.scaled = data %>%
mutate(width_diff = width_A - width_B,
height_diff = height_A - height_B,
number_of_images_diff = number_of_images_A - number_of_images_B,
writing_space_size_diff = writing_space_size_A - writing_space_size_B,
paper_thickness_diff = paper_thickness_A - paper_thickness_B)
require(tidyverse)
data.scaled = data %>%
mutate(width_diff = width_A - width_B,
height_diff = height_A - height_B,
number_of_images_diff = number_of_images_A - number_of_images_B,
writing_space_size_diff = writing_space_size_A - writing_space_size_B,
paper_thickness_diff = paper_thickness_A - paper_thickness_B)
View(data.scaled)
range(c(1,2,3,4), c(0,1))
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
data.scaled = data %>%
mutate(width_diff = range01(width_A - width_B),
height_diff = range01(height_A - height_B),
number_of_images_diff = range01(number_of_images_A - number_of_images_B),
writing_space_size_diff = range01(writing_space_size_A - writing_space_size_B),
paper_thickness_diff = range01(paper_thickness_A - paper_thickness_B))
View(data.scaled)
test = glm(choice ~ width_diff + height_diff + number_of_images_diff + writing_space_size_diff + paper_thickness_diff)
test = glm(choice ~ width_diff + height_diff + number_of_images_diff + writing_space_size_diff + paper_thickness_diff,
data.scaled)
test = glm(choice ~ width_diff + height_diff + number_of_images_diff + writing_space_size_diff + paper_thickness_diff,
data.scaled,
family = 'binomial')
test
summary(test)
test$coefficients
exp(test$coefficients)
rescale_to_sum_one <- function(vec) {
vec / sum(vec)
}
rescale_to_sum_one(test$coefficients)
rescale_to_sum_one(exp(test$coefficients))
# Calculate sample size
result = power.t.test(delta = 0.4, sd = 1, sig.level = 0.05, power = 0.80, type = "two.sample", alternative = 'one.sided')
result$n * 4/3 * 2
# Calculate sample size
result = power.t.test(delta = 0.2, sd = 1, sig.level = 0.05, power = 0.80, type = "two.sample", alternative = 'one.sided')
result$n * 4/3 * 2
# Calculate sample size
result = power.t.test(delta = 0.25, sd = 1, sig.level = 0.05, power = 0.80, type = "two.sample", alternative = 'one.sided')
result$n * 4/3 * 2
load("/Users/am9578/My Drive/Psychology/Projects/ma_choice/git3_pristine_osf/data-analysis/home-fixed/analysis_output.rdata")
summary(lm(scale(weight.accuracy.averaged) ~ scale(actual.inv.temp), data = df.demo.filt))
summary(lm(scale(weight.accuracy.averaged) ~ scale(actual.model.loo.readable), data = df.demo.filt))
summary(lm(scale(weight.accuracy.actual) ~ scale(actual.model.loo.readable), data = df.demo.filt))
observer_coefficient_mean
load("/Users/am9578/My Drive/Psychology/Projects/short-meditation-introspection/experiments/v1/real1/analysis_output.rdata")
# for NIH reporting
nrow(df.demo)
sum(df.demo$race.fac == 'White', na.rm = T)
nrow(df.demo[grep("Hispanic", df.demo$race), ])
if (!require('pacman')) {
install.packages('pacman')
require('pacman')
}
pkg.names = c('ggplot2', 'tidyverse', 'this.path', 'brms', 'bayestestR', 'rstan', 'posterior', 'parallel', 'doParallel')
p_load(char = pkg.names)
setwd(here())
set.seed(123)
default_priors <- set_prior("normal(0,1)", class = 'b')
## load data
load('../pilot1/pilot1_alltasks.rdata')
load('../pilot2/pilot2_alltasks.rdata')
combined_data_introspection_experience = all_data_introspection_experience_pilot1 %>%
mutate(introspect_rating = (introspect_rating - 50) / 40,
study = 'pilot1') %>%
rbind(all_data_introspection_experience_pilot2 %>% mutate(introspect_rating = introspect_rating / 50, study = 'pilot2')) %>%
mutate(introspect_rating = scale(introspect_rating),
effect_size_range = scale(effect_size_range))
all_summary_introspection_experience = combined_data_introspection_experience %>%
group_by(showed_effect) %>%
summarize(mean_introspect_rating = mean(introspect_rating),
se_introspect_rating = se(introspect_rating))
se = function(x) {return(sd(x, na.rm = T) / sqrt(sum(!is.na(x))))}
se.prop = function(x) {return(sqrt(mean(x, na.rm = T) * (1-mean(x, na.rm = T)) / sum(!is.na(x))))}
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
dodge <- position_dodge(width=0.9)
combined_data_introspection_experience = all_data_introspection_experience_pilot1 %>%
mutate(introspect_rating = (introspect_rating - 50) / 40,
study = 'pilot1') %>%
rbind(all_data_introspection_experience_pilot2 %>% mutate(introspect_rating = introspect_rating / 50, study = 'pilot2')) %>%
mutate(introspect_rating = scale(introspect_rating),
effect_size_range = scale(effect_size_range))
all_summary_introspection_experience = combined_data_introspection_experience %>%
group_by(showed_effect) %>%
summarize(mean_introspect_rating = mean(introspect_rating),
se_introspect_rating = se(introspect_rating))
ggplot(all_summary_introspection_experience,
aes(x = showed_effect, y = mean_introspect_rating, fill = showed_effect)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "", x = "Influenced by heuristic?", y = "Influence rating") +
theme_custom() +
scale_fill_manual(values = effect_no) +
scale_x_discrete(labels = c('Yes', 'No')) +
guides(fill = "none") +
scale_y_continuous(limits = c(-50, 50))#
ggplot(all_summary_introspection_experience,
aes(x = showed_effect, y = mean_introspect_rating, fill = showed_effect)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "", x = "Influenced by heuristic?", y = "Influence rating") +
scale_fill_manual(values = effect_no) +
scale_x_discrete(labels = c('Yes', 'No')) +
guides(fill = "none") +
scale_y_continuous(limits = c(-50, 50))#
exp_control <- c("#F37121", "#4793AF")
exp_neutral_control <- c("#F37121", "#D3D3D3", "#4793AF")
effect_no <- c("#e74c3c", "#D3D3D3")
theme_custom <- function() {
theme_minimal(base_family = "Optima") +
theme(
axis.text.x = element_text(size = 15, margin = margin(t = 0, r = 0, b = 0, l = 1)),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15),
plot.title = element_text(size = 18, face = "bold"),
legend.text = element_text(size = 15),
legend.title = element_text(size = 15),
strip.text = element_text(size = 15),
aspect.ratio = 1,  # Set the aspect ratio here
panel.grid.major.x = element_blank(),  # Remove major vertical grid lines
panel.grid.minor.x = element_blank()   # Remove minor vertical grid lines
)
}
ggplot(all_summary_introspection_experience,
aes(x = showed_effect, y = mean_introspect_rating, fill = showed_effect)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "", x = "Influenced by heuristic?", y = "Influence rating") +
scale_fill_manual(values = effect_no) +
theme_custom() +
scale_x_discrete(labels = c('Yes', 'No')) +
guides(fill = "none") +
scale_y_continuous(limits = c(-50, 50))#
ggplot(all_summary_introspection_experience,
aes(x = showed_effect, y = mean_introspect_rating, fill = showed_effect)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "", x = "Influenced by heuristic?", y = "Influence rating") +
scale_fill_manual(values = effect_no) +
theme_custom() +
scale_x_discrete(labels = c('Yes', 'No')) +
guides(fill = "none") +
scale_y_continuous(limits = c(-1, 1))#
all_summary_introspection_experience = combined_data_introspection_experience %>%
group_by(showed_effect) %>%
filter(!is.na(showed_effect)) %>%
summarize(mean_introspect_rating = mean(introspect_rating),
se_introspect_rating = se(introspect_rating))
ggplot(all_summary_introspection_experience,
aes(x = showed_effect, y = mean_introspect_rating, fill = showed_effect)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "", x = "Influenced by heuristic?", y = "Influence rating") +
scale_fill_manual(values = effect_no) +
theme_custom() +
scale_x_discrete(labels = c('Yes', 'No')) +
guides(fill = "none") +
scale_y_continuous(limits = c(-1, 1))#
## load data
load('../pilot1/pilot1_alltasks.rdata')
all_data_introspection_experience_pilot1$introspect_rating
range(all_data_introspection_experience_pilot1$introspect_rating)
all_data_introspection_experience_pilot2$introspect_rating
range(all_data_introspection_experience_pilot2$introspect_rating)
combined_data_introspection_experience = all_data_introspection_experience_pilot1 %>%
mutate(introspect_rating = (introspect_rating - 40) / 40,
study = 'pilot1') %>%
rbind(all_data_introspection_experience_pilot2 %>% mutate(introspect_rating = introspect_rating / 50, study = 'pilot2')) %>%
mutate(introspect_rating = scale(introspect_rating),
effect_size_range = scale(effect_size_range))
all_summary_introspection_experience = combined_data_introspection_experience %>%
group_by(showed_effect) %>%
filter(!is.na(showed_effect)) %>%
summarize(mean_introspect_rating = mean(introspect_rating),
se_introspect_rating = se(introspect_rating))
ggplot(all_summary_introspection_experience,
aes(x = showed_effect, y = mean_introspect_rating, fill = showed_effect)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "", x = "Influenced by heuristic?", y = "Influence rating") +
scale_fill_manual(values = effect_no) +
theme_custom() +
scale_x_discrete(labels = c('Yes', 'No')) +
guides(fill = "none") +
scale_y_continuous(limits = c(-1, 1))#
ggplot(all_summary_introspection_experience,
aes(x = showed_effect, y = mean_introspect_rating, fill = showed_effect)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "", x = "Influenced by heuristic?", y = "Influence rating") +
scale_fill_manual(values = effect_no) +
theme_custom() +
scale_x_discrete(labels = c('Yes', 'No')) +
guides(fill = "none") +
scale_y_continuous(limits = c(-1, 1)) +
geom_jitter(color = 'gray', alpha = 0.1,
mapping = aes(y = introspect_rating),
data = combined_data_introspection_experience %>%
filter(!is.na(showed_effect)),
width = .1, height = 0) +
# ## run combined analyses
#
# combined_analysis_introspection_continuous = brm(introspect_rating ~ effect_size_range + (effect_size_range || subject) + (effect_size_range || task_name),
#                                                  combined_data_introspection_experience %>% mutate(introspect_rating = scale(introspect_rating),
#                                                                                                    effect_size_range = scale(effect_size_range)),
#                                                  prior = default_priors,
#                                                  #save_pars = save_pars(group = F),
#                                                  cores = 4,
#                                                  control = list(adapt_delta = 0.95))
# summarise_draws(combined_analysis_introspection_continuous)
# check_divergences(combined_analysis_introspection_continuous$fit)
# summary(combined_analysis_introspection_continuous)
# hdi(combined_analysis_introspection_continuous)
#
# save(combined_data_introspection_experience, combined_analysis_introspection_continuous, file='power_analysis_prereq.rdata')
## run power analysis from existing data
load('power_analysis_prereq.rdata')
ggplot(all_summary_introspection_experience,
aes(x = showed_effect, y = mean_introspect_rating, fill = showed_effect)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "", x = "Influenced by heuristic?", y = "Influence rating") +
scale_fill_manual(values = effect_no) +
theme_custom() +
scale_x_discrete(labels = c('Yes', 'No')) +
guides(fill = "none") +
scale_y_continuous(limits = c(-1, 1)) +
geom_jitter(color = 'gray', alpha = 0.1,
mapping = aes(y = introspect_rating),
data = combined_data_introspection_experience %>%
filter(!is.na(showed_effect)),
width = .1, height = 0)
# Combined plot 2
ggplot(combined_data_introspection_experience,
aes(x = effect_size_range, y = introspect_rating)) +
geom_point(alpha=0.5) +
geom_smooth(method='lm') +
theme_custom() +
labs(x = 'Influence magnitude',
y = 'Influence rating')
# Combined plot 3
all_bysubject_introspection_experience = combined_data_introspection_experience %>%
group_by(subject) %>%
summarize(subject_cor = cor(effect_size_range, introspect_rating))
ggplot(all_bysubject_introspection_experience, aes(x = subject_cor)) +
geom_histogram(color = 'white') +
theme_black() +
labs(x = 'Participant-level correlation between\nobserved and self-reported bias magnitudes',
y = 'Number of subjects') +
geom_vline(xintercept = mean(all_bysubject_introspection_experience$subject_cor, na.rm = T), color = 'red') +
geom_vline(xintercept = mean(all_bysubject_introspection_experience$subject_cor, na.rm = T) - se(all_bysubject_introspection_experience$subject_cor), color = 'red', linetype = 'dashed') +
geom_vline(xintercept = mean(all_bysubject_introspection_experience$subject_cor, na.rm = T) + se(all_bysubject_introspection_experience$subject_cor), color = 'red', linetype = 'dashed') +
scale_y_continuous(labels = c(), expand = expansion(mult = c(0, 0.05)))
ggplot(all_bysubject_introspection_experience, aes(x = subject_cor)) +
geom_histogram(color = 'black') +
theme_custom() +
labs(x = 'Participant-level correlation between\ninfluence ratings and influence magnitudes',
y = 'Number of subjects') +
geom_vline(xintercept = mean(all_bysubject_introspection_experience$subject_cor, na.rm = T), color = 'red') +
geom_vline(xintercept = mean(all_bysubject_introspection_experience$subject_cor, na.rm = T) - se(all_bysubject_introspection_experience$subject_cor), color = 'red', linetype = 'dashed') +
geom_vline(xintercept = mean(all_bysubject_introspection_experience$subject_cor, na.rm = T) + se(all_bysubject_introspection_experience$subject_cor), color = 'red', linetype = 'dashed') +
scale_y_continuous(labels = c(), expand = expansion(mult = c(0, 0.05)))
# Combined plot 1
ggplot(all_summary_introspection_experience,
aes(x = showed_effect, y = mean_introspect_rating, fill = showed_effect)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = mean_introspect_rating - se_introspect_rating, ymax = mean_introspect_rating + se_introspect_rating), width = 0.2) +
labs(title = "", x = "Influenced by heuristic?", y = "Influence rating") +
scale_fill_manual(values = effect_no) +
theme_custom() +
scale_x_discrete(labels = c('Yes', 'No')) +
guides(fill = "none") +
scale_y_continuous(limits = c(-1, 1)) +
geom_jitter(color = 'gray', alpha = 0.1,
mapping = aes(y = introspect_rating),
data = combined_data_introspection_experience %>%
filter(!is.na(showed_effect)),
width = .1, height = 0) +
theme(
panel.background = element_rect(fill = "transparent"),
plot.background = element_rect(fill = "transparent", color = NA)
)
# Combined plot 2
ggplot(combined_data_introspection_experience,
aes(x = effect_size_range, y = introspect_rating)) +
geom_point(alpha=0.5) +
geom_smooth(method='lm') +
theme_custom() +
labs(x = 'Influence magnitude',
y = 'Influence rating') +
theme(
panel.background = element_rect(fill = "transparent"),
plot.background = element_rect(fill = "transparent", color = NA)
)
ggplot(all_bysubject_introspection_experience, aes(x = subject_cor)) +
geom_histogram(color = 'black') +
theme_custom() +
labs(x = 'Participant-level correlation between\ninfluence ratings and influence magnitudes',
y = 'Number of subjects') +
geom_vline(xintercept = mean(all_bysubject_introspection_experience$subject_cor, na.rm = T), color = 'red') +
geom_vline(xintercept = mean(all_bysubject_introspection_experience$subject_cor, na.rm = T) - se(all_bysubject_introspection_experience$subject_cor), color = 'red', linetype = 'dashed') +
geom_vline(xintercept = mean(all_bysubject_introspection_experience$subject_cor, na.rm = T) + se(all_bysubject_introspection_experience$subject_cor), color = 'red', linetype = 'dashed') +
scale_y_continuous(labels = c(), expand = expansion(mult = c(0, 0.05))) +
theme(
panel.background = element_rect(fill = "transparent"),
plot.background = element_rect(fill = "transparent", color = NA)
)
